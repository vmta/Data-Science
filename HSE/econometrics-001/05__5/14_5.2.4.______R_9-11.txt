
﻿1
00:00:12,715 --> 00:00:17,131
Проверим предварительно наличие
гетероскедастичности графически
с помощью остатков.
Во-первых, добавим в нашу
табличку с данными h остатки,
полученные при оценивании модели,
то есть h = augment, с помощью модели,
которая так и называется
model и к набору данных h.
Давайте посмотрим, что у нас получилось,
что изменилось в наборе h glimpse(h).
И здесь видно,
что помимо исходных переменных цена,
общая площадь, жилая площадь,
расстояние до центра и так далее,
появились новые переменные,
которые родились после оценивания модели,
а именно, соответственно, нас будет
интересовать эта переменная .resid — это
новая переменная,
которая равна соответствующему остатку,
также интересна переменная .fitted — это
прогнозное значение стоимости квартир.
И мы построим график,
как зависит от регрессора размер остатка.
То есть мы построим график,
используя табличку h с новыми добавленными
переменными, где по горизонтали отложим
объясняющую переменную — в нашем
случае это общая площадь,
а по вертикали отложим,
соответственно, абсолютное значение
остатка модуль остатка abs(.resid).
На этом графике мы также видим,
что с ростом общей площади, с ростом
total span меняется разброс остатков,
меняется разброс ошибок прогнозов.
Когда total span (общая
площадь) маленькая,
то разброс ошибок прогнозов небольшой,
когда total span большая — разброс
ошибок прогнозов большой, что еще раз
подтверждает нам гетероскедастичность.
Давайте попробуем, соответственно,
вместо ковариационной матрицы,
оцениваемой стандартными
формулами по умолчанию,
получить оценки устойчивой
гетероскедастичности.
Соответственно, мы пишем
variance-covariance matrix, HC
heteroscedasticity consistent (устойчивой
гетероскедастичности) для модели model.
Это немножко другая матрица,
ее можно сравнить легко с той, что была.
Давайте для удобства разместим их
рядом и посмотрим как изменились
оценки стандартных ошибок.
И видно, что оценки стандартных
ошибок существенно выросли.
Например, при использовании
неправильной формулы,
которая верна для случая
гомоскедастичных ошибок,
оценка дисперсии коэффициента
при общей площади равна 0,0024,
в то время как при использовании
корректных формул,
которые позволяют работать
с гетероскедастичностью,
та же самая оценка дисперсии равна
0,013 — что на порядок больше.
Мы обсуждали на лекции,
что существует несколько способов
корректировки оценок для малых выборок,
которые асимптотически эквивалентны,
но на малых выборках они могут
дать немножко разные результаты.
Команда vcov HC(model) позволяет
использовать все популярные
типы корректировок, ну,
например корректировка HC2,
которая нам выдаст чуть-чуть другие
оценки дисперсий оцененных коэффициентов,
но, тем не менее, они похожи на те,
что используются в самом
удачном алгоритме HC3.
Протестируем гипотезы
о равенстве нулю коэффициентов с
использованием верных стандартных ошибок.
То есть проведем coeftest — тест
на коэффициенты для модели,
но теперь будем использовать правильную,
подходящую для данного случая
ковариационную матрицу,
а именно vcov HC для данной модели.
К счастью, мы видим,
что в данной ситуации,
несмотря на то, что поменялись значения
t-statistic, давайте мы увидим,
что они действительно поменялись,
возьмем рядом для сравнения покажем
старый тест с использованием неверных
оценок ковариаций и стандартных ошибок.
Вот видно, что оценки коэффициентов
ни на сколько не поменялись,
абсолютно те же самые оценки
коэффициентов β с крышкой,
однако стандартные ошибки
существенно меняются.
Здесь с 3,7 до 7,8 — примерно в два раза,
и здесь от 0,049 до 0,12.
Соответственно, изменения
очень существенные.
Но, тем не менее, коэффициенты
остаются значимы что в первом,
что во втором случае.
Этот вывод, к счастью, не меняется.
Теперь построим,
не только проверим гипотезы,
но и построим доверительные интервалы
устойчивой гетероскедастичности.
Поскольку асимптотически эти t-статистики
имеют нормальное распределение,
то мы можем использовать
соответствующие квантили,
отступить от оцененного коэффициента
2,59 влево и вправо на две
стандартных ошибки и получить
95 % доверительный интервал.
Давайте попробуем это сделать.
Помещаем результат тестирования
гипотез в отдельную табличку,
давайте назовем ее conftable.
Соответственно, это результат
предыдущей команды,
и после этого из этой
таблички conftable нам,
собственно, нужны только оценки
коэффициентов и стандартные ошибки.
А дальше мы прибавим к оценке коэффициента
две стандартных ошибки и вычтем две
стандартных ошибки.
Соответственно, табличка для
доверительного интервала,
это будет data.frame.
Мы берем оценку estimate —
это будет из нашей таблички
conftable первый столбик,
а, соответственно,
стандартная ошибка устойчивой
гетероскедастичности, давайте пометим,
что это,
назовем ее se_hc heteroscedasticity
consistant — это будет,
соответственно, второй столбик
нашей таблички conftable.
И, соответственно, взяли из нашей
таблички только то, что нам интересно,
а теперь изменим нашу
табличку mutate (ci),
дописав в нее левую границу
доверительного интервала
left_ ci,
считается по формуле, соответственно,
estimate минус
1,96 помножить на стандартную ошибку.
Правая граница доверительного интервала
right_ci считается по формуле: оценка плюс
1,96 умножить на стандартную ошибку
в условиях гетероскедастичности.
Посмотрим на нашу табличку и
получаем доверительные интервалы.
Соответственно, доверительный интервал
для свободного члена от –77 до –46 и
доверительный интервал для коэффициента
при общей площади, то есть для
эффекта насколько увеличится цена при
увеличении общей площади на единичку,
мы получаем другой более широкий
доверительный интервал от 2,37 до 2,18.
Если мы сравним с тем
доверительным интервалом,
который считается по умолчанию,
который является некорректным в условиях
гетероскедастичности confint(model),
то старый некорректный интервал
был уже — от 2,5 до 2,7.
А здесь мы видим, что
гетероскедастичность чуть-чуть расширила
доверительный интервал,
то есть сделала оценки менее точными.

