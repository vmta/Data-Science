
﻿1
00:00:12,100 --> 00:00:18,950
Рассмотрим пример задачи
на построение дерева.
Итак, у нас есть зависимые
переменные yi и xi.
Исходные данные таковы: по y — 1, 2, 9,
10, 10; и по объясняющей переменной — 1,
2, 3, 4, 5.
Соответственно, наша задача — построить,
построить оптимальное,
оптимальное классификационное дерево,
классификационное дерево, ну,
скажем, с тремя «листиками».
Ну для начала,
прежде, чем строить дерево, давайте для
удобства введем такую функцию — сумму
квадратов остатков от набора чисел.
Если у меня есть какой-то набор чисел,
я его буду просто заменять на
его среднее арифмитическое.
Ну, например,
если у меня есть набор чисел: 1,
2 и 9, вот такой набор из трех чисел.
Ну, естественно, здесь среднее
арифметическое по данному набору чисел,
вот здесь вот y среднее = 1,
2 + 9, деленное на 3 = 4.
И, соответственно, если я прогнозирую
вместо каждого числа 4, то есть
меня просят прогнозировать числа из этого
набора, а я вместо каждого говорю: ну,
вот если выбрать много раз число из
этого набора, ну будет примерно 4.
Вот, естественно,
у меня будет какая-то ошибка.
И сумма квадратов ошибок RSS
для данной ситуации — это (1
− 4) в квадрате + (2 − 4) в
квадрате + (9 − 4) в квадрате.
То есть прогнозировать
я буду очень просто,
средним числом любой набор буду заменять,
а RSS — это, как всегда,
будет сумма квадратов ошибок прогнозов, то
есть прогноз у меня будет равен среднему
числу в наборе, но в данном случае это,
соответственно,
3 в квадрате + 2 в квадрате
+ 5 в квадрате, ну и,
соответственно, получается 9 + 4 + 25,
получается 13 + 25 = 38.
И, если мы поняли, что такое, значит,
как мы прогнозируем любой набор чисел,
и что является суммой квадрат и ошибок,
то мы готовы начать строить дерево.
Итак, у меня изначально в
стартовом узле есть все y: 1,
2, 9, 10 и 10.
И теперь я должен этот набор
данных разделить на 2 части.
Ну, поскольку делить я могу только по
объясняющей переменной, по x, то я могу,
соответственно, задать какой-то вопрос,
там: правда ли, что x > 2,5?
И поделить свой набор вот между 2 и 3.
А могу, например, задать вопрос: а правда
ли, что x > 4 и поделить набор на 2 части.
Соответственно, я этот набор
должен поделить на 2 части,
задав какой-то вопрос по x.
Но, соответственно,
давайте подумаем — как мне, чему равна
сумма квадратов ошибок прогнозов сейчас,
и как мне лучше поделить набор на 2 части?
Ну в настоящий момент,
если я применю эту самую логику,
посчитаю среднее арифметическое
и посчитаю RSS для набора: 1,
2, 9, 10, 10, сейчас окажется,
что, соответственно, у меня y
среднее = 20 и еще 12,
32/5, то есть я каждое число
буду прогнозировать 32/5,
и, соответственно, в данной ситуации RSS
= 81,2 при такой ситуации.
Я могу, вообще говоря,
предложить 4 варианта дележки.
Могу делить 1, 2, 9, 10 и 10, могу делить,
отрезать 1, могу отрезать 2,
могу отрезать 9, могу отрезать одну из 10.
Вот четыре варианта деления.
И нам, соответственно, надо посчитать — на
какие наборы делится наш набор данных при
каждой дележке и посчитать
соответствующую сумму квадратов остатков.
Если я отрежу единичку и
отдельно остальные числа,
то у меня будет набор: 1, 2, 9, 10, 10.
Здесь у меня в наборе находится одно число
— 1, я его смогу идеально прогнозировать.
Если я попал в левый набор,
то я прогнозирую — 1, здесь RSS = 0,
соответственно, суммарный
RSS здесь окажется: 0 +,
здесь я буду прогнозировать,
у меня 4 числа: 10, 10, 9 и 2.
Я буду прогнозировать их
средним арифметическим,
то есть: 10 + 10 + 9 пополам.
То есть, если мне говорят: выпало число
из этого набора, я говорю: ну, наверное,
это вот 31, деленное на 4, примерно.
И RSS для набора: 2, 9, 10,
10 оказывается равным 44,75.
Если я поделю по 2,
у меня будет два набора чисел: 1,
2 и набор чисел: 9, 10 и 10.
И, соответственно,
суммарный RSS будет равен.
Если я попадаю в левый набор,
то я прогнозирую.
Ну, если мне говорят: выпало 1 или 2,
как бы, я, спрогнозировано,
я бы сказал: ну примерно 1,5 выпало.
И, соответственно,
здесь ошибка прогноза — это 0,5.
Ну 0,5 в квадрате + 0,5 в квадрате,
это 0,25 на 2, это 0,5.
И RSS по набору: 9, 10,
10 оказывается равным 2/3.
Аналогично, если я делю по 9: 1, 2, 9.
И отделяю 10-ки в сторонку.
RSS для первого набора, для набора: 1, 2,
9, оказывается равным 38, а во втором
наборе, там находятся только 10-ки,
поэтому я второй набор я прогнозирую
идеально, соответственно RSS там равен 0.
И последний вариант дележки,
если я делю числа на: 1,
2, 9 и 10, и отдельно отделяю 10.
Соответственно, RSS в такой
ситуации по первому набору,
по: 1, 2, 9, 10 равен 65, а по второму
набору, там находится только 10.
Если я знаю число из второго набора,
я могу идеально спрогнозировать 10-кой.
Соответственно, + 0.
Я вижу, что сумма квадратов
ошибок оказывается наименьшей,
если я отделю 1 и 2 от 9, 10 и 10.
Соответственно, первое деление, мне надо
разделить мой набор на две части: 1, 2.
И здесь 9, 10 и 10.
Ну и вопрос про x, который может отделить,
осуществить это разбиение,
это, например,
вопрос: а правда ли, что x больше,
чем, правда ли, что x_i меньше,
чем 2,5, например.
Здесь ответ: да, здесь ответ: нет.
И теперь я могу, вот у меня уже, на таком
простом дереве у меня 2 финальных листика.
Соответственно, 2 терминальных узла.
Ну мне тут разрешено 3 листика,
соответственно, я могу еще одно разбиение
сделать, и чтобы,
терминальных листиков тогда окажется 3.
Ну тут понятны варианты,
что я либо здесь разобью на 2 части,
либо здесь разобью на 2 части.
В любом случае я могу свести
RSS для разбиения к 0.
Ну, действительно, если у меня есть набор
чисел: 1 и 2, то я его, естественно,
разобью на 2 набора.
1, отедельно 2, число 1 прогнозируется
идеально, число 2 прогнозируется идеально.
И набор чисел: 9,
10 и 10 тоже можно легко разбить на
случай идеального прогнозирования.
9 отдельно и 10-ки отдельно.
И, естественно,
здесь RSS до разбиения равен 0,5,
а после разбиения окажется равным 0.
И здесь RSS до разбиения был равен 2/3,
а после разбиения окажется равным нулю.
Поэтому, естественно, мне лучше,
чтобы снижение суммы квадратов ошибок
было сильнее, 2/3 превратить в 0.
Соответственно, я буду
разбивать вот здесь.
Ну мне надо отделить 9 от 10-ок,
ну чтобы отделить 9 от 10-ок,
можно ли задать вопрос,
например: а правда ли, что x_i < 3,5?
Если я задам такой вопрос,
то вот здесь у меня
отделится 9-ка,
а здесь у меня отделится две 10-ки.
Здесь, на случай ответа: да,
здесь на случай ответа: нет.
И вот у меня получилось такое
дерево классификационное,
которое мне будет позволять
предсказывать y, если известен x.
Ну, например, можно с помощью этого дерева
осуществить прогноз для какого-то x.
Ну, например, если мне сказали,
что x равен..., ну не важно,
любое число, 15,
то что прогнозирует мое дерево?
Ну смотрим: x_i < 2,5?
Нет, значит пошли сюда.
xi < 3,5?
Нет, значит пошли сюда.
И дерево говорит: прогноз — 10.
y с крышкой = 10.
Например, если я возьму x = 0,
что прогнозирует мое дерево?
Ну оно задает вопрос: правда ли,
что x < 2,5, говорим: да,
а здесь «валяются» числа 1 и 2, ну среднее
арифметические между ними, это — 1,5.
Поэтому дерево мое прогнозирует,
что y с крышкой равняется 1,5.
И вот так вот сначала можно,
руководствуясь минимизацией RSS,
построить классификационное дерево,
а потом с помощью него можно
осуществлять прогнозы.
Ну, естественно,
я изобразил совсем простую ситуацию,
где у меня одна объясняющая переменная,
поэтому я задаю вопросы только про x.
А если тут много объясняющих переменных,
то, естественно,
вопросы при делении ветви
дерева на две подветви,
можно уже задавать и про x,
и про другую объясняющую переменную z.

