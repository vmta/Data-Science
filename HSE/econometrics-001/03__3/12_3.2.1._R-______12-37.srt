1
00:00:13,270 --> 00:00:19,772
Переходим к компьютерной
части третьей лекции.

2
00:00:19,772 --> 00:00:24,388
Запускаем наше студио, открываем шаблон

3
00:00:24,388 --> 00:00:30,096
lab_3_before R для работы,
как всегда более-менее

4
00:00:30,096 --> 00:00:34,788
серьезное исследование начинается
с загрузки кучи полезных пакетов.

5
00:00:34,788 --> 00:00:39,289
Ну, мы предполагаем, что их уже
поставили через tools install packages,

6
00:00:39,289 --> 00:00:40,710
все требуемые пакеты.

7
00:00:40,710 --> 00:00:43,820
И если вы их поставили,
тогда мы просто активируем их,

8
00:00:43,820 --> 00:00:46,280
нажимая Ctrl + Enter или Command + Enter.

9
00:00:46,280 --> 00:00:51,036
Первый, второй, третий, четвертый, пятый,
шестой, седьмой, восьмой, девятый,

10
00:00:51,036 --> 00:00:52,470
десятый, одиннадцатый.

11
00:00:52,470 --> 00:00:56,551
Соответственно, предупреждение warning,
в них нет ничего страшного.

12
00:00:56,551 --> 00:01:00,564
Это говорит о том, что просто версия
R установленная, на этом компьютере,

13
00:01:00,564 --> 00:01:03,974
чуть-чуть более старая, чем та,
которая вышла в Интернете,

14
00:01:03,974 --> 00:01:05,702
ничего опасного в этом нет.

15
00:01:05,702 --> 00:01:11,731
Мы не используем какие-то совершенно
совсем уж совсем последние достижения мы

16
00:01:11,731 --> 00:01:15,028
используем в основном базовый функционал,
поэтому нам это не очень важно.

17
00:01:15,028 --> 00:01:18,332
Тут важно обратить, что если вот
возникла какая-то ошибка, не warning,

18
00:01:18,332 --> 00:01:22,056
не предупреждение, а error (ошибка) —
это говорит о том, что скорее всего,

19
00:01:22,056 --> 00:01:25,223
данный пакет просто не был
установлен или опечатка в названии,

20
00:01:25,223 --> 00:01:28,900
поэтому если какой-то пакет не установлен,
его надо установить.

21
00:01:28,900 --> 00:01:32,389
Хорошо, переходим к содержательной части.

22
00:01:32,389 --> 00:01:36,933
Для начала проиллюстрируем
графически переход к логарифмам.

23
00:01:36,933 --> 00:01:40,290
Для начала рассмотрим
встроенный набор данных,

24
00:01:40,290 --> 00:01:45,560
набор данных по цене бриллиантов,
h <- diamonds.

25
00:01:45,560 --> 00:01:52,645
Можно посмотреть, что находится в этом
наборе h, glimpse(h) и мы видим,

26
00:01:52,645 --> 00:01:57,290
что в этом наборе данных есть
информация по массе бриллианта,

27
00:01:57,290 --> 00:02:02,320
есть информация по качеству огранки,
по цвету, по прозрачности.

28
00:02:02,320 --> 00:02:05,502
Ну, давайте для простоты
воспользуемся двумя переменными,

29
00:02:05,502 --> 00:02:08,982
а именно массой бриллианта в каратах
и ценой бриллианта в долларах.

30
00:02:08,982 --> 00:02:14,019
Соответственно, поскольку этот набор
данных, встроенный в R, то соответственно,

31
00:02:14,019 --> 00:02:20,230
документацию к нему можно почитать,
набрав help(diamonds) и узнать,

32
00:02:20,230 --> 00:02:24,883
чего там означает каждая
переменная и вот здесь видно,

33
00:02:24,883 --> 00:02:28,780
что у нас наблюдений очень
много 54 000 бриллиантов.

34
00:02:28,780 --> 00:02:34,140
Соответственно, мы построим график,
самый первый базовый график — qplot,

35
00:02:34,140 --> 00:02:39,218
данные возьмем из набора данных h,
по горизонтали отложим соответственно,

36
00:02:39,218 --> 00:02:43,170
массу бриллианта в каратах,
а по вертикали отложим его цену.

37
00:02:43,170 --> 00:02:52,177
И у нас получится вот такой
замечательный график,

38
00:02:52,177 --> 00:02:56,760
он немножко долго строится,
потому что тут 54 000 точек.

39
00:02:56,760 --> 00:03:02,080
А теперь мы перейдем к логарифмам.

40
00:03:02,080 --> 00:03:06,549
То есть мы видим, что на этом
графике зависимость не линейная.

41
00:03:06,549 --> 00:03:11,640
Вот сначала с ростом массы
от нуля до единички,

42
00:03:11,640 --> 00:03:16,936
у нас цена растет на 5 000 да,
а потом с ростом

43
00:03:16,936 --> 00:03:22,500
массы от одного до двух цена
уже как-то растет более резко.

44
00:03:22,500 --> 00:03:25,421
Поэтому здесь оправдан
переход к логарифмам.

45
00:03:25,421 --> 00:03:28,860
Мы построим тот же самый график,
только в других осях.

46
00:03:28,860 --> 00:03:31,536
Данные мы возьмем из набора данных h,

47
00:03:31,536 --> 00:03:37,067
однако по горизонтали мы отложим логарифм,
логарифм массы и по вертикали отложим

48
00:03:37,067 --> 00:03:41,840
логарифм массы бриллианта и посмотрим на
тот же самый график, только в других осях.

49
00:03:48,375 --> 00:03:52,508
И соответственно, мы видим,
что при переходе к логарифмам, ну,

50
00:03:52,508 --> 00:03:57,321
во-первых, логарифмы,
если раньше сама масса менялась

51
00:03:57,321 --> 00:04:02,239
от нуля до пяти карат,
то соответственно, мы видим,

52
00:04:02,239 --> 00:04:08,146
что логарифм массы он уже меняется где-то
вот от минус полутора до полутора,

53
00:04:08,146 --> 00:04:11,980
но зависимость стала
более похожа на линию.

54
00:04:11,980 --> 00:04:16,385
И соответственно, такое
преобразование позволяет нашей модели

55
00:04:16,385 --> 00:04:19,150
линейной быть более адекватной данным.

56
00:04:19,150 --> 00:04:25,950
Давайте посмотрим некоторые
усовершенствования к нашему графику.

57
00:04:25,950 --> 00:04:30,285
Здесь к сожалению на графике
сплошная чернота из-за того,

58
00:04:30,285 --> 00:04:35,149
что 54 000 точек, то на нашем графике
собственно, не совсем понятно,

59
00:04:35,149 --> 00:04:39,982
каких больше бриллиантов вот таких вот,
которые здесь лежат или вот здесь вот.

60
00:04:39,982 --> 00:04:44,743
И существует такая стандартная техника,
когда наблюдений слишком много,

61
00:04:44,743 --> 00:04:49,323
это конечно, очень хорошая ситуация,
но тем не менее, чтобы визуализировать ее,

62
00:04:49,323 --> 00:04:51,993
возникает некоторая
дополнительная трудность.

63
00:04:51,993 --> 00:04:56,003
Давайте наш график, наш базовый график
назовем буковками bg вот сделаем

64
00:04:56,003 --> 00:04:59,515
такое присвоение bg — это
просто наш базовый график.

65
00:04:59,515 --> 00:05:04,555
А теперь к нашему базовому графику
чуть-чуть изменим его тип.

66
00:05:04,555 --> 00:05:09,592
Скажем, что это будет
график шестиугольники.

67
00:05:09,592 --> 00:05:13,379
То есть у нас плоскость будет
замощена шестиугольниками.

68
00:05:13,379 --> 00:05:18,758
Выбираем geom_hex, нажимаем тут Tab, беру
в скобочки и строю немножко измененный

69
00:05:18,758 --> 00:05:24,220
график, который нам позволит увидеть
черную кошку в черной комнате.

70
00:05:24,220 --> 00:05:29,370
Соответственно, вот если
посмотреть на предыдущий график,

71
00:05:29,370 --> 00:05:31,317
то тут все черным черно.

72
00:05:31,317 --> 00:05:35,970
Это черная комната,
а сейчас мы в ней увидим черных кошек.

73
00:05:35,970 --> 00:05:42,032
Да, соответственно на
этом графике мы видим,

74
00:05:42,032 --> 00:05:46,111
что уже не все черным черно,
а есть вертикальные светлые полосочки.

75
00:05:46,111 --> 00:05:49,030
Иногда попадаются темные места,
а иногда светлые.

76
00:05:49,030 --> 00:05:51,485
Это означает,
что есть стандартная форма огранки.

77
00:05:51,485 --> 00:05:53,565
То есть на этом графике
можно сделать вывод,

78
00:05:53,565 --> 00:05:57,216
что будет стандартная форма огранки, вот
вертикальная черта соответствует какой-то

79
00:05:57,216 --> 00:06:01,206
стандартной массе, а между ними бриллианты
тоже попадаются, но их гораздо меньше,

80
00:06:01,206 --> 00:06:02,620
тут темные шестиугольники.

81
00:06:02,620 --> 00:06:08,160
Поэтому этот график позволяет нам
увидеть черных кошек в черной комнате.

82
00:06:08,160 --> 00:06:11,760
Давайте проиллюстрируем,

83
00:06:11,760 --> 00:06:16,830
еще приведем одну иллюстрацию
полезности от перехода к логарифмам.

84
00:06:16,830 --> 00:06:20,773
Загрузим данные по
стоимости квартир в Москве.

85
00:06:20,773 --> 00:06:24,041
Это уже набор данных не встроенной ver,

86
00:06:24,041 --> 00:06:29,470
мы его уже загружали в прошлом практикуме,
соответственно,

87
00:06:29,470 --> 00:06:33,880
мы используем команду read.csv,
указываем имя файла.

88
00:06:33,880 --> 00:06:39,702
Здесь надо сказать R из
какой папки брать файлы.

89
00:06:39,702 --> 00:06:43,468
Мы заходим в session и указываем
Set Working Directory —

90
00:06:43,468 --> 00:06:46,975
To Source file Location то есть
это означает, что по умолчанию,

91
00:06:46,975 --> 00:06:52,345
R будет искать файлы в той папке,
в которой находится наш script.

92
00:06:52,345 --> 00:06:56,610
И мы в ней выбираем наш файл,
вот flats_moscow.txt.

93
00:06:56,610 --> 00:07:03,400
Я на всякий случай напомню, что там
есть разделители, это знаки табуляции.

94
00:07:03,400 --> 00:07:06,640
Разделители — это знаки табуляции.

95
00:07:06,640 --> 00:07:10,257
Заголовок — первая строчка,
отвечает за имена переменных.

96
00:07:10,257 --> 00:07:10,810
Он есть.

97
00:07:10,810 --> 00:07:13,402
И разделитель десятичных разрядов — точка.

98
00:07:13,402 --> 00:07:18,105
Соответственно, если ваш файл имеет
другой формат, то вам надо выбрать

99
00:07:18,105 --> 00:07:23,400
разделитель данных указать, если заголовок
и десятичный разделитель указать.

100
00:07:23,400 --> 00:07:30,680
Мы загрузили набор данных f,
можем посмотреть на наш набор данных f.

101
00:07:30,680 --> 00:07:36,733
Тут у нас есть несколько переменных,
описание, оно

102
00:07:36,733 --> 00:07:42,419
приложено в файле flats_moscow_description
и соответственно, вы можете посмотреть.

103
00:07:42,419 --> 00:07:45,841
Ну, основные переменные: price — это
цена квартиры в тысячах долларах.

104
00:07:45,841 --> 00:07:50,505
Это данные нескольколетней давности,
totspan — это общая площадь квартиры,

105
00:07:50,505 --> 00:07:54,680
livespan — жилая,
kitspan — площадь кухни ну, и так далее.

106
00:07:54,680 --> 00:07:58,001
Соответственно, давайте построим график,

107
00:07:58,001 --> 00:08:02,814
возьмем значит данные из набора
данных f на этот раз и построим по

108
00:08:02,814 --> 00:08:08,429
горизонтали жилую площадь,
а по вертикали отложим цену квартиры.

109
00:08:08,429 --> 00:08:10,061
Сначала без логарифмов.

110
00:08:10,061 --> 00:08:13,250
Посмотрим, как выглядит
график без логарифмов.

111
00:08:13,250 --> 00:08:15,575
Здесь 2 000 наблюдений.

112
00:08:15,575 --> 00:08:20,092
Можно посмотреть структуру
таблички f тут будет написано,

113
00:08:20,092 --> 00:08:23,210
что у нас 2 040 наблюдений
по 11 переменным.

114
00:08:23,210 --> 00:08:24,887
Соответственно, мы видим,

115
00:08:24,887 --> 00:08:27,980
что тут зависимость как-то
тоже непохожа на прямую.

116
00:08:27,980 --> 00:08:31,560
Однако, давайте попробуем
перейти к логарифмам.

117
00:08:31,560 --> 00:08:34,424
И построим тот же самый график.

118
00:08:34,424 --> 00:08:37,400
Данные берем из набора данных f.

119
00:08:37,400 --> 00:08:41,257
По горизонтали отложим логарифм
общей площади квартиры,

120
00:08:41,257 --> 00:08:43,810
а по вертикали отложим логарифм цены.

121
00:08:43,810 --> 00:08:49,235
И вот мы видим, что уже данные
превратились в такое вытянутое облачко,

122
00:08:49,235 --> 00:08:55,154
которое более-менее уже похоже
на рассеяние точек вдоль прямой.

123
00:08:55,154 --> 00:08:58,870
То есть при переходе к логарифмам
мы получим более адекватную модель.

124
00:08:58,870 --> 00:09:03,766
Ну, тут следует сказать,
что зачастую бывают наборы данных,

125
00:09:03,766 --> 00:09:09,238
где много качественных переменных,
например, в наборе данных по квартирам,

126
00:09:09,238 --> 00:09:14,152
качественными переменными являются walk —
находится ли квартира в пешей доступности

127
00:09:14,152 --> 00:09:18,804
от метро — единичкой, если да, ноль, если
нет, brick кирпичный или не кирпичный дом.

128
00:09:18,804 --> 00:09:20,154
Один, если кирпичный.

129
00:09:20,154 --> 00:09:25,649
И еще третья переменная это является ли
квартира квартирой на крайних этажах,

130
00:09:25,649 --> 00:09:28,340
то есть на первом или на последнем.

131
00:09:28,340 --> 00:09:34,340
Соответственно, как визуализировать
много качественных переменных.

132
00:09:34,340 --> 00:09:39,001
Для этого есть очень удачный
пакет vcd и в нем живет функция,

133
00:09:39,001 --> 00:09:41,980
которая называется mosaic.

134
00:09:41,980 --> 00:09:44,755
Она представляет собой мозаичный график.

135
00:09:44,755 --> 00:09:50,768
Давайте возьмем данные из набора данных
по квартирам и построим мозаичный график,

136
00:09:50,768 --> 00:09:53,972
где сначала поделим все квартиры по тому,

137
00:09:53,972 --> 00:09:57,810
находятся ли они в пешей
доступности от метро или нет.

138
00:09:57,810 --> 00:10:02,610
Потом поделим по тому критерию,
является ли этот дом кирпичным или нет.

139
00:10:02,610 --> 00:10:07,410
И потом поделим по критерию, является
ли квартира на первом этаже или нет.

140
00:10:07,410 --> 00:10:11,141
И давайте еще укажем,
что нам нужна закраска,

141
00:10:11,141 --> 00:10:14,040
потом мы скажем, что она означает.

142
00:10:14,040 --> 00:10:19,410
Мы получим вот такой интересный,
необычный график.

143
00:10:19,410 --> 00:10:22,853
Давайте его проинтерпретируем,

144
00:10:22,853 --> 00:10:28,440
потому что очень часто попадаются наборы
данных, где много качественных переменных.

145
00:10:28,440 --> 00:10:33,414
Значит, сначала мы поделили все квартиры
на квартиры в пешей доступности от метро.

146
00:10:33,414 --> 00:10:35,145
Ну, это как указано в объявлении.

147
00:10:35,145 --> 00:10:37,350
А что там на самом деле,
конечно, не знаем.

148
00:10:37,350 --> 00:10:40,675
И мы видим,
что квартира в пешей доступности от метро,

149
00:10:40,675 --> 00:10:44,772
длина вот этого отрезка, больше,
чем квартир далеко от метро.

150
00:10:44,772 --> 00:10:49,747
Дальше квартиры каждого типа и те, и те,
в свою очередь делятся на квартиры

151
00:10:49,747 --> 00:10:53,880
в кирпичных домах, вернее не в кирпичных
brick равно 0, и квартиры в кирпичных.

152
00:10:53,880 --> 00:10:57,930
И здесь мы видим очень интересный факт,
что среди тех квартир,

153
00:10:57,930 --> 00:11:04,178
которые в пешей доступности от метро,
доля кирпичных домов выше,

154
00:11:04,178 --> 00:11:09,053
чем в тех квартирах,
которые не в пешей доступности от метро.

155
00:11:09,053 --> 00:11:14,474
Вот здесь, когда walk равно 0,
то пропорция единичек brick к нулям,

156
00:11:14,474 --> 00:11:19,348
brick, она меньше,
чем пропорции единичек кирпичных к нулям,

157
00:11:19,348 --> 00:11:23,664
кирпичных для случая домов в
пешей доступности от метро.

158
00:11:23,664 --> 00:11:29,330
А дальше уже все делится по принципу на
первом этаже квартира или не на первом.

159
00:11:29,330 --> 00:11:32,826
И здесь мы видим,
что вот эти два фактора walk и brick,

160
00:11:32,826 --> 00:11:37,310
они более-менее связаны с тем,
на каком этаже находится квартира.

161
00:11:37,310 --> 00:11:41,304
Пропорции примерно постоянные
между теми квартирами,

162
00:11:41,304 --> 00:11:45,480
которые не на первом этаже и теми
квартирами, которые на первом этаже.

163
00:11:45,480 --> 00:11:48,074
То есть на графике,
что обозначает площадь?

164
00:11:48,074 --> 00:11:51,836
Она пропорциональна соответственно,
количеству наблюдений,

165
00:11:51,836 --> 00:11:53,860
которые попадают в эту категорию.

166
00:11:53,860 --> 00:11:55,222
А что означают цвета?

167
00:11:55,222 --> 00:12:00,367
Компьютер автоматом проверяет гипотезу о
независимости признаков и соответственно,

168
00:12:00,367 --> 00:12:01,574
если бы мы представили,

169
00:12:01,574 --> 00:12:05,430
что на самом деле все три признака
независимы (в пешей доступности от метро,

170
00:12:05,430 --> 00:12:09,140
кирпичность дома и floor),
тогда бы все прямоугольнички были серыми.

171
00:12:09,140 --> 00:12:12,890
А наличие синеньких прямоугольничков
говорит, что по сравнению с ситуацией

172
00:12:12,890 --> 00:12:16,767
независимости наблюдений, в эту группу
попадает слишком много наблюдений,

173
00:12:16,767 --> 00:12:19,372
но а красные соответственно,
что слишком мало.

174
00:12:19,372 --> 00:12:21,800
Соответственно, мы загрузили,

175
00:12:21,800 --> 00:12:26,580
посмотрели пользу от перехода к
логарифмам и проиллюстрировали.

176
00:12:26,580 --> 00:12:28,501
как работать с большим количеством,

177
00:12:28,501 --> 00:12:31,930
как визуализировать большое
количество качественных переменных

