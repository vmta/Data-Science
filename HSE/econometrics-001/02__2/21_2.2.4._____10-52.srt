1
00:00:14,700 --> 00:00:21,170
Перейдём к одному из очень важных
моментов, как загрузить данные в R,

2
00:00:21,170 --> 00:00:25,855
поскольку, естественно, как правило,
данные собирают одни люди,

3
00:00:25,855 --> 00:00:29,901
а модель оценивают другие люди,
или данные у вас уже собраны.

4
00:00:29,901 --> 00:00:31,232
Это очень важный вопрос.

5
00:00:31,232 --> 00:00:33,835
Соответственно, давайте
сначала начнём с того,

6
00:00:33,835 --> 00:00:36,390
как сохранить результаты
нашего исследования.

7
00:00:36,390 --> 00:00:40,400
Во-первых, в R есть такое понятие
как рабочая папка, то есть папка,

8
00:00:40,400 --> 00:00:45,320
к которой R будет обращаться, в которой он
будет сохранять файлы или из которой он

9
00:00:45,320 --> 00:00:47,205
будет читать файлы по умолчанию.

10
00:00:47,205 --> 00:00:51,166
Соответственно, можно установить
эту папку, выбрав Session,

11
00:00:51,166 --> 00:00:56,024
Set Working Directory, и, соответственно,
либо можно её просто выбрать руками,

12
00:00:56,024 --> 00:01:01,838
Choose Directory, либо выбрать такую
опцию, например, To Source File Location,

13
00:01:01,838 --> 00:01:07,389
то есть в ту же папку, где хранится
файл R, с которым вы работаете.

14
00:01:07,389 --> 00:01:11,149
У меня данные лежат в той же папке,
что и файл R,

15
00:01:11,149 --> 00:01:15,687
поэтому я выберу Session, Set Working
Directory, To Source File Location.

16
00:01:15,687 --> 00:01:19,940
Но если не получилось, то просто выберите
руками ту папку, где лежат ваши данные.

17
00:01:19,940 --> 00:01:26,466
На самом деле исполнение этой «менюшки»
просто эквивалентно тоже команде R.

18
00:01:26,466 --> 00:01:29,300
То есть на самом деле можно
было по «менюшке» не лазить,

19
00:01:29,300 --> 00:01:33,101
а дать вот такую команду,
но при этом, конечно,

20
00:01:33,101 --> 00:01:37,635
надо знать название той папки,
где у вас хранятся данные.

21
00:01:37,635 --> 00:01:43,506
Мы сначала попробуем сделать задачу: мы
сохраним результат нашего исследования,

22
00:01:43,506 --> 00:01:45,688
чтобы якобы мы их как бы прочитали.

23
00:01:45,688 --> 00:01:46,860
Это первый момент.

24
00:01:46,860 --> 00:01:54,600
Значит, сохранение результатов работы.

25
00:01:54,600 --> 00:01:59,580
К примеру, вы работали,
экспериментировали и решили,

26
00:01:59,580 --> 00:02:04,194
что вот из всех ваших экспериментов часть
была бесполезной, оказалась, но, вернее,

27
00:02:04,194 --> 00:02:09,123
они были полезны, но они вам помогли
что-то обнаружить, что чего-то нет,

28
00:02:09,123 --> 00:02:13,563
но ценными оказались некоторые модели,
не все, а только некоторые.

29
00:02:13,563 --> 00:02:19,980
И вы решили, допустим, сохранить model2 и
решили сохранить, сам набор данных h.

30
00:02:19,980 --> 00:02:25,184
Соответственно, мы самое ценное,
что хотим сохранить,

31
00:02:25,184 --> 00:02:30,101
мы поместим это в список, соответственно,

32
00:02:30,101 --> 00:02:34,035
давайте назовём его stuff,

33
00:02:34,035 --> 00:02:41,277
равняется list,

34
00:02:41,277 --> 00:02:45,060
и тут укажем, что данные мы возьмём h,

35
00:02:45,060 --> 00:02:50,190
и, например,

36
00:02:50,190 --> 00:02:54,790
model — это будет model2.

37
00:02:54,790 --> 00:03:00,202
Соответственно, stuff — это будет,
вот можно посмотреть,

38
00:03:00,202 --> 00:03:05,100
что такое stuff, stuff — это список из
двух объектов: объекта data и объекта,

39
00:03:05,100 --> 00:03:08,420
тут ниже можете листать, model.

40
00:03:08,420 --> 00:03:14,620
И теперь мы сохраним этот
наш список из двух вещей.

41
00:03:14,620 --> 00:03:17,760
Соответственно, saveRDS.

42
00:03:17,760 --> 00:03:23,988
На всякий случай ещё раз напоминаю, что
R отличает маленькие и заглавные буквы,

43
00:03:23,988 --> 00:03:27,220
то есть будьте внимательны: save
маленькими, RDS заглавными.

44
00:03:27,220 --> 00:03:31,831
Мы сохраняем в файл,

45
00:03:31,831 --> 00:03:38,940
будет называться, скажем, mydata.Rds

46
00:03:38,940 --> 00:03:43,670
А мы сохраним тут вот наш список stuff.

47
00:03:43,670 --> 00:03:45,858
Вот он сохранился.

48
00:03:45,858 --> 00:03:51,548
Можно открыть папку и обнаружить, что
здесь в папке появился файл mydata.Rds

49
00:03:51,548 --> 00:03:57,810
Он небольшой, R очень компактно пишет свои
данные все, это одна из его особенностей.

50
00:03:57,810 --> 00:04:01,112
И теперь, в принципе,

51
00:04:01,112 --> 00:04:06,420
мы можем начать работу заново,
то есть закрыть всё, всё забыть.

52
00:04:06,420 --> 00:04:10,603
Но давайте мы не будем для удобства всё
закрывать, но тем не менее сделаем вид,

53
00:04:10,603 --> 00:04:13,443
что мы всё закрыли, заново открыли.

54
00:04:13,443 --> 00:04:15,780
И — загрузить наши данные.

55
00:04:15,780 --> 00:04:20,162
То есть встаём в нужную папку и,

56
00:04:20,162 --> 00:04:25,098
соответственно, загружаем наши данные
пусть в какой-то другой список, давайте,

57
00:04:25,098 --> 00:04:29,443
список mylist равняется, и на это раз я

58
00:04:29,443 --> 00:04:34,502
напишу readRDS, то есть прочитаю
файл с ранее сохранёнными данными.

59
00:04:34,502 --> 00:04:37,760
Тут надо, естественно,
знать то, как назывался файл.

60
00:04:37,760 --> 00:04:40,635
Еще раз.
Поскольку R позволяет по tab'у дополнять,

61
00:04:40,635 --> 00:04:43,210
то можно только написать кавычки,
нажать tab,

62
00:04:43,210 --> 00:04:48,877
и R вам покажет все файлы в той папке,
которую вы установили как рабочую.

63
00:04:48,877 --> 00:04:51,794
Можно выбрать нужный файл, нажать окей,

64
00:04:51,794 --> 00:04:57,304
и теперь данные из этого файла
поместились в список mylist.

65
00:04:57,304 --> 00:05:00,830
И можно посмотреть,
что живет в этом списке.

66
00:05:00,830 --> 00:05:03,362
В списке mylist нажать mylist$,

67
00:05:03,362 --> 00:05:08,090
нажать tab и посмотреть: там живут данные,
и там живёт model.

68
00:05:08,090 --> 00:05:11,970
И, например, можно посмотреть,

69
00:05:11,970 --> 00:05:16,110
и вернуться к старой модели,
посмотреть summary.

70
00:05:16,110 --> 00:05:23,290
И вот у нас та же самая model2,

71
00:05:23,290 --> 00:05:28,860
которую мы поместили в список stuff,
потом сохранили, потом прочитали.

72
00:05:28,860 --> 00:05:35,318
Формат RDS — это внутренний формат R,
который очень компактный.

73
00:05:35,318 --> 00:05:38,480
R его очень быстро записывает,
очень быстро читает.

74
00:05:38,480 --> 00:05:42,127
Но его недостатком является то,
что это его внутренний формат,

75
00:05:42,127 --> 00:05:45,601
он нечеловекочитабельный и,
соответственно,

76
00:05:45,601 --> 00:05:50,100
самым распространённым
форматом является не Rds,

77
00:05:50,100 --> 00:05:54,100
а так называемый формат csv.

78
00:05:54,100 --> 00:06:02,380
csv расшифровывается как
comma separated values,

79
00:06:02,380 --> 00:06:07,684
что означает: «значения,
разделённые запятыми».

80
00:06:07,684 --> 00:06:11,383
То есть файл представляет
собой текстовый файл обычный,

81
00:06:11,383 --> 00:06:17,082
в котором есть или нет названий
переменных, иногда названия указывают,

82
00:06:17,082 --> 00:06:21,681
иногда не указывают, а дальше в отдельный
столбик идёт первая переменная,

83
00:06:21,681 --> 00:06:23,590
в другой столбик вторая и так далее.

84
00:06:23,590 --> 00:06:27,135
Вообще стандарт предусматривает
разделение запятой,

85
00:06:27,135 --> 00:06:31,234
и в самом названии
содержится слово «запятая»,

86
00:06:31,234 --> 00:06:36,302
но на практике разделяют,
несмотря на название файла csv.

87
00:06:36,302 --> 00:06:41,647
Разделение там может быть чем угодно:
могут отделяться отдельные наблюдения

88
00:06:41,647 --> 00:06:46,814
табуляциями, могут точкой с запятой, хотя
на самом деле стандарт предусматривает,

89
00:06:46,814 --> 00:06:49,530
что значения должны быть
разделены запятыми.

90
00:06:49,530 --> 00:06:53,095
И давайте попробуем прочитать
какой-нибудь файл в формате csv.

91
00:06:53,095 --> 00:06:57,282
Я специально выбрал файл,
который не совсем в формате csv,

92
00:06:57,282 --> 00:07:02,002
чтобы это было для нас лишней
сложностью и для вас было бы проще,

93
00:07:02,002 --> 00:07:06,361
когда вы на практике столкнётесь
с чтением какого-то файла,

94
00:07:06,361 --> 00:07:09,740
который вроде как csv, но не совсем csv,
не совсем по стандарту.

95
00:07:09,740 --> 00:07:16,055
Чтобы прочитать, сначала просто
визуально посмотрите на ваш файл.

96
00:07:16,055 --> 00:07:22,370
То есть вот я беру файл с данными
по ценам квартир в Москве.

97
00:07:22,370 --> 00:07:25,753
Это достаточно старые данные,
но тем не менее.

98
00:07:25,753 --> 00:07:28,348
И вот я его открываю просто в Блокноте,

99
00:07:28,348 --> 00:07:32,088
или в любом другом
редакторе текстовых файлов.

100
00:07:32,088 --> 00:07:33,100
И что я вижу?

101
00:07:33,100 --> 00:07:36,638
Я вижу, что у меня в первой
строчке есть названия переменных,

102
00:07:36,638 --> 00:07:39,190
это важный момент, который надо отметить.

103
00:07:39,190 --> 00:07:41,196
Дальше, что я вижу?

104
00:07:41,196 --> 00:07:47,140
Я вижу еще такой момент важный:
в российских данных по-разному,

105
00:07:47,140 --> 00:07:51,580
— некоторые авторы используют
запятую в качестве разделителя,

106
00:07:51,580 --> 00:07:55,517
а большая часть населения земного шара
использует точку, то есть там китайцы,

107
00:07:55,517 --> 00:07:57,050
американцы используют точку.

108
00:07:57,050 --> 00:08:00,346
Поэтому вот надо всегда
присматриваться к тому,

109
00:08:00,346 --> 00:08:02,769
как у вас разделена
целая часть от дробной.

110
00:08:02,769 --> 00:08:04,265
И я вижу, что здесь точка.

111
00:08:04,265 --> 00:08:06,160
Это второй момент, который я отмечаю.

112
00:08:06,160 --> 00:08:08,764
И третий момент, который я отмечаю,
открыв этот файл,

113
00:08:08,764 --> 00:08:10,840
— это как разделены отдельные наблюдения.

114
00:08:10,840 --> 00:08:15,880
Здесь я вижу,
что между соседними наблюдениями,

115
00:08:15,880 --> 00:08:20,170
вот это третье наблюдение, вот цена,
вот это общая площадь totalspan.

116
00:08:20,170 --> 00:08:24,405
Я вижу,
что не запятая отделяет наблюдения,

117
00:08:24,405 --> 00:08:27,472
не точка с запятой и не пачка пробелов,

118
00:08:27,472 --> 00:08:31,780
а я вижу, что вот один такой
неразрывный знак, это табуляция.

119
00:08:31,780 --> 00:08:34,302
Соответственно, я, посмотрев на файл,

120
00:08:34,302 --> 00:08:39,778
выяснил для себя три момента: есть
заголовок, данные отделяются табуляцией,

121
00:08:39,778 --> 00:08:44,290
и точка используется как
разделитель десятичной части.

122
00:08:44,290 --> 00:08:47,915
Соответственно, это не
совсем стандарт csv,

123
00:08:47,915 --> 00:08:51,225
потому что в стандарте csv должна
была бы быть не табуляция, а запятая.

124
00:08:51,225 --> 00:08:53,080
Ну и ладно, мы все равно его прочитаем.

125
00:08:53,080 --> 00:08:58,860
Соответственно, поместим
наши данные в табличку t.

126
00:08:58,860 --> 00:09:04,946
Можно, конечно, делать по принципу
«я счастливчик и мне повезёт».

127
00:09:04,946 --> 00:09:09,923
read.csv и в кавычках набрать имя
файла flats_moscow.txt и посмотреть,

128
00:09:09,923 --> 00:09:10,880
что получится.

129
00:09:10,880 --> 00:09:16,862
И посмотреть на, значит,
наш файл, glimpse(t).

130
00:09:16,862 --> 00:09:20,290
Но видно, что что-то тут не то.

131
00:09:20,290 --> 00:09:23,881
Вот, соответственно,
чтобы прочитать этот файл, мы выяснили,

132
00:09:23,881 --> 00:09:28,629
что он не совсем стандарта csv, поэтому
функция вот так по умолчанию не сработала.

133
00:09:28,629 --> 00:09:33,592
Поэтому давайте мы укажем вот эти
три важных составляющих момента при

134
00:09:33,592 --> 00:09:34,780
чтении файлов.

135
00:09:34,780 --> 00:09:36,962
Что является разделителем?

136
00:09:36,962 --> 00:09:40,595
Разделителем у нас является табуляция.

137
00:09:40,595 --> 00:09:42,970
Что является...

138
00:09:42,970 --> 00:09:45,375
Это был separator, разделитель данных.

139
00:09:45,375 --> 00:09:50,252
Что является десятичным разделителем, то
есть что отделяет дробную часть от целой?

140
00:09:50,252 --> 00:09:52,220
Точка.
И дальше надо указать,

141
00:09:52,220 --> 00:09:56,953
что первая строчка — это ещё не сами
данные а первая строчка — это были

142
00:09:56,953 --> 00:10:00,550
названия переменных,
это header равно TRUE,

143
00:10:00,550 --> 00:10:04,320
то есть header принимает значение TRUE
или FALSE, если название переменных.

144
00:10:04,320 --> 00:10:10,292
Десятичный разделитель указали, указали
разделитель между наблюдениями, и теперь

145
00:10:10,292 --> 00:10:16,540
попробуем прочитать наш файл и посмотреть
ещё раз на прочитанные нами данные.

146
00:10:16,540 --> 00:10:21,226
Вот мы увидим, что на этот раз всё
замечательно прочиталось, и мы, скажем,

147
00:10:21,226 --> 00:10:26,605
можем оценить модель линейной регрессии.

148
00:10:26,605 --> 00:10:31,878
Взять данные из таблички t и посмотреть,
как цена квартиры зависит,

149
00:10:31,878 --> 00:10:37,200
скажем, от общей площади и является
ли дом кирпичным, переменная brick.

150
00:10:37,200 --> 00:10:41,490
Вот можно посмотреть,
у нас всё отлично загрузилось.

151
00:10:41,490 --> 00:10:47,923
Это был набор данных,
не встроенный в R, это мы загрузили csv

152
00:10:47,923 --> 00:10:52,290
файл.

