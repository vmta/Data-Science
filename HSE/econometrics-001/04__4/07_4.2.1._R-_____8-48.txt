
﻿1
00:00:14,335 --> 00:00:20,440
Приступим к компьютерной
части четвёртой недели.
Запускаем RStudio, открываем заранее
заготовленный файл с загрузкой пакетов,
который нам понадобится, lab_04_beforeR.
Это пакеты, которые потребуются нам
для работы с мультиколлинеарностью,
и методы главных компонент.
Мы их быстренько пробегаем Ctrl+Enter,
чтобы запустить,
чтобы компьютер узнал команды, которые в
них содержатся, и приступаем к работе.
Мы рассмотрим тот же набор данных,
что и в первой лекции.
В табличку данных h мы поместим
данные из набора по машинам.
Я на всякий случай напомню,
что это за набор данных.
Лучше всего напомнить, построив график.
Данные возьмём для графика
из набора данных h.
По горизонтали отложим скорость машины,
по вертикали — длину тормозного пути.
Вот он наш набор данных на графике.
И, соответственно, я напомню,
что мы строили, ну мы там, конечно,
переводили футы и скорость из миль
в час в привычные нам единицы.
Мы сейчас не будем этого делать.
И, соответственно,
мы строили простую модель.
Простая линейная модель,
данные брали из набора данных h.
И, соответственно, как зависит длина
тормозного пути (distance) от скорости.
Если посмотреть на отчёт по этой модели,
то в этой модели,
конечно, никакой мультиколлинеарности нет.
Видно, что коэффициент прекрасно значим.
Ну а раз коэффициент значим,
то проблемы мультиколлинеарности не стоит,
потому что мультиколлинеарность
проявляется в том,
что у нас широкий доверительный
интервал и коэффициенты незначимы.
Однако я ж на самом-то деле,
когда гляжу на этот график, я не знаю,
зависит ли, зависимость является
тут идеально линейной или,
может быть, здесь слабая квадратическая
зависимость или кубическая.
Ну и поскольку я этого не знаю,
давайте я создам две новых переменных.
Я добавлю в набор данных h,
команда mutate,
добавлю квадрат скорости
и добавлю куб скорости.
Назову его speed3, это скорость в кубе.
И, соответственно, оценю модель,
в которую я постараюсь,
я включу и скорость,
и скорость в квадрате, и скорость в кубе.
Это будет модель...
Ну как мы бы заранее ожидаем,
что там будет мультиколлинеарность.
Это будет линейная модель по
тому же самому набору данных h,
но теперь я предполагаю, что длина
тормозного пути объясняется скоростью,
квадратом скорости и,
возможно, кубом скорости.
И если я посмотрю на эту модель,
summary(model_mk),
то здесь я увижу, что у меня нет
ни одного значимого коэффициента.
Гипотеза о том, что нет зависимости от
скорости, не отвергается, p-value 0,32.
Гипотеза о том, что нет зависимости
от квадрата скорости, не отвергается.
Гипотеза о том, что нет зависимости от
куба скорости, тоже не отвергается.
То есть нет основания отвергать гипотезу
о том, что какой-то зависимости нет.
Однако если посмотреть на F-статистику,
которая проверяет гипотезу
о значимости регрессии в целом,
то гипотеза о значимости,
то мы приходим к выводу,
что регрессия в целом значима.
Гипотеза о том, что все три коэффициента
при скорости, при скорости в квадрате и
при скорости в кубе, гипотеза о том,
что все эти три коэффициента равны нулю,
отвергается: p-value здесь 
3 на 10 в минус одиннадцатой.
Соответственно, от
чего-то зависимость есть,
но от чего — непонятно: вот у нас перед
нами ситуация мультиколлинеарности.
Действительно, мы можем с помощью
корреляции между отдельными регрессорами и
показателя коэффициента
вздутия дисперсии увидеть,
что имеются признаки мультиколлинеарности.
Если я посмотрю, попрошу компьютер
посчитать коэффициенты вздутия дисперсии,
то я увижу, что у меня коэффициент вздутия
дисперсии, то есть один делить на один
минус R² в регрессии скорости на
остальные объясняющие переменные,  274.
Аналогично для скорости в квадрате 
1000 с лишним и для скорости в кубе 62
00:04:24,967 --> 00:04:25,764
около 500.
То есть у нас есть индикация
мультиколлинеарности.
И аналогично мы можем
посмотреть на корреляции.
Давайте мы создадим матрицу х0.
Матрица х0 — это будет, это будут наши
регрессоры только без свободного члена.
Для этого мы воспользуемся
командой model.matriх.
И здесь в команде model.matriх надо
указать, откуда берутся данные.
Данные берутся из набора данных h.
И дальше указать формулу.
Но по умолчанию,
если написать ту же саму формулу,
компьютер добавит единичный столбец,
а он нам для расчёта корреляций не нужен.
Поэтому мы тут напишем 0 +.
Это означает, что я получу все регрессоры,
кроме единичного столбца.
Ну можно посмотреть на эту матрицу х0.
Вот, действительно, здесь скорость,
квадрат скорости и куб скорости.
И можно посчитать корреляцию
между регрессорами и увидеть,
что корреляция между регрессорами высокая.
Вон самая низкая — 0,94,
а так есть 0,97, 0,99.
Соответственно, для чего
используются модели?
Ну модели используются
для прогнозирования.
Давайте посмотрим, насколько разные
выходят прогнозы по модели с
мультиколлинеарностью с кучей переменных,
незначимых по отдельности, и без.
Для этого создадим новый набор данных nd.
Это будет набор данных, data.frame.
Значит, скорость будет равняться,
пусть будет 10 миль в час.
Соответственно, квадрат скорости
обязан равняться ста милям в час,
и куб скорости обязан
равняться тысяче миль в час.
И я построю два интервала.
Построю интервал по модели
с одной объясняющей переменной
для набора данных newdata=nd.
И тип интервала,
interval укажу "prediction".
Соответственно, вот это — это
прогнозный интервал предиктивный
для модели с одной объясняющей
переменной без мультиколлинеарности.
И лёгким движением руки я построю
доверительный интервал по
модели с мультиколлинеарностью.
Я вижу,
что доверительный интервал
поменялся совсем несущественно.
Несмотря на то, что там был один значимый
коэффициент, а здесь три и незначимых,
доверительный интервал для
прогноза был от минус 9,8 до 53-х,
а стал от минус 7,8 до 55,4.
Причём точечный прогноз изменился от 21-го
фута до 23-х футов, то есть несущественно.
Однако если я посмотрю на значимость и
доверительные интервалы для отдельных
коэффициентов, то разница существенная.
Если я наберу, хочу доверительные
интервалы для коэффициентов модели,
то здесь у меня коэффициент
при скорости — я
оцениваю увеличение скорости на одну
милю в час — приводит к увеличению
длины тормозного пути
от трёх до 4,7 футов.
Однако если я построю
доверительный интервал для модели с
мультиколлинеарностью, то доверительный
интервал окажется существенно шире.
Коэффициент, аналогичный
коэффициенту при скорости,
вот коэффициент при скорости во второй
модели, — для него доверительный интервал
уже не от 3-х до 4,7,
а от минус 6,8 до 20-ти.
Соответственно, мы на данном примере
проиллюстрировали мысль о том,
что если нас интересует
доверительный интервал для прогноза,
то мультиколлинеарность для нас
не составляет никаких проблем.
Однако если мы хотим понять,
от какой переменной у нас зависимость,
и построить как можно более
узкий доверительный интервал,
то мультиколлинеарность может быть
для нас некоторым препятствием.

