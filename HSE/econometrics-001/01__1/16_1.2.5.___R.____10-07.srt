1
00:00:13,270 --> 00:00:14,332
После того?

2
00:00:14,332 --> 00:00:21,005
как мы посмотрели графически на наши
данные, мы можем перейти к оценке моделей.

3
00:00:21,005 --> 00:00:25,983
Ну, в данном случае мы, поскольку понимаем
направление причинно-следственной связи,

4
00:00:25,983 --> 00:00:30,000
что это скорость влияет на длину
тормозного пути, то, соответственно,

5
00:00:30,000 --> 00:00:33,276
мы построим зависимость длины
тормозного пути от скорости,

6
00:00:33,276 --> 00:00:35,692
то есть оценим модель линейной регрессии.

7
00:00:35,692 --> 00:00:40,080
Это выполняется в R одной командой,
то есть мы так и напишем, что наша модель

8
00:00:40,080 --> 00:00:45,560
равняется lm, lm – это специальная
команда для метода наименьших квадратов,

9
00:00:45,560 --> 00:00:51,260
«linear model»,
данные мы возьмем из набора данных d2,

10
00:00:51,260 --> 00:00:55,997
и дальше надо написать
формулу зависимости.

11
00:00:55,997 --> 00:01:01,710
У R, у команды lm, точнее, есть свой
специальный формат описания моделей.

12
00:01:01,710 --> 00:01:06,457
Зависимую переменную пишут сначала,
то есть в данном случае зависимая

13
00:01:06,457 --> 00:01:11,038
переменная dist, длина тормозного пути,
после этого пишут значок тильды (~).

14
00:01:11,038 --> 00:01:13,720
Вот самое сложное – это
найти тильду на клавиатуре.

15
00:01:13,720 --> 00:01:16,910
После того как вы нашли тильду на
клавиатуре, оценить модель очень легко.

16
00:01:16,910 --> 00:01:18,802
Вот, поставили тильду,

17
00:01:18,802 --> 00:01:24,313
а после этого через плюс надо написать все
объясняющие переменные, все регрессоры.

18
00:01:24,313 --> 00:01:26,890
Ну, поскольку у нас регрессор
один – это скорость,

19
00:01:26,890 --> 00:01:29,140
то мы без всяких плюсов
просто пишем speed.

20
00:01:29,140 --> 00:01:32,631
Нажимаем Ctrl + Enter, все,
наша модель оценилась.

21
00:01:32,631 --> 00:01:36,785
Ну, визуально вроде никакой реакции,
но это нормально, то есть главное, что вот

22
00:01:36,785 --> 00:01:40,380
есть треугольничек, который говорит,
что никакой ошибки нет и модель оценилась.

23
00:01:40,380 --> 00:01:44,736
Мы, соответственно,
можем посмотреть на результаты оценивания,

24
00:01:44,736 --> 00:01:47,110
набрать model и нажать Ctrl + Enter.

25
00:01:47,110 --> 00:01:50,015
И вот мы видим оценки коэффициентов.

26
00:01:50,015 --> 00:01:54,783
Оценка коэффициентов β₁ с крышкой
минус пять iii и β₂ с крышкой,

27
00:01:54,783 --> 00:01:57,011
коэффициент перед скоростью 0,7.

28
00:01:57,011 --> 00:01:59,036
То есть как мы проинтерпретируем?

29
00:01:59,036 --> 00:02:04,479
Это означает, что в среднем при
увеличении скорости на один километр

30
00:02:04,479 --> 00:02:09,460
в час длина тормозного пути
увеличивается на 0,7 метра.

31
00:02:09,460 --> 00:02:11,844
Ну, к сожалению, вот этот коэффициент,

32
00:02:11,844 --> 00:02:15,947
хотя его теоретически тоже можно
проинтерпретировать, и мы ожидаем,

33
00:02:15,947 --> 00:02:20,044
что он должен быть около нуля,
поскольку по смыслу, что это такое?

34
00:02:20,044 --> 00:02:22,363
Это длина тормозного пути у машины,

35
00:02:22,363 --> 00:02:27,363
которая движется с нулевой скоростью,
она, это intercept, пересечение.

36
00:02:27,363 --> 00:02:29,670
Ну, здесь получилась оценка минус пять.

37
00:02:29,670 --> 00:02:31,160
Ну, такая вышла.

38
00:02:31,160 --> 00:02:34,979
Соответственно, что
можно извлечь из модели?

39
00:02:34,979 --> 00:02:37,821
Когда компьютер оценил модель, мы,

40
00:02:37,821 --> 00:02:40,648
естественно, из модели можем
извлечь кучу показателей.

41
00:02:40,648 --> 00:02:44,153
Ну, например, мы можем извлечь в
отдельный вектор сами коэффициенты.

42
00:02:44,153 --> 00:02:47,836
Давайте назовем этот вектор beta_hat,
β с крышкой, да.

43
00:02:47,836 --> 00:02:53,404
beta_hat, соответственно,
равняются коэффициенты от нашей модели,

44
00:02:53,404 --> 00:02:58,348
и это удобно, если мне нужны какие-то
дальнейшие действия над коэффициентами,

45
00:02:58,348 --> 00:03:02,273
то вот они у меня лежат в отдельном
векторе β с крышкой, beta_hat.

46
00:03:02,273 --> 00:03:04,021
Что еще можно изучить?

47
00:03:04,021 --> 00:03:08,580
Можно остатки извлечь, ну,
допустим, ε с крышкой, eps_hat.

48
00:03:08,580 --> 00:03:10,036
Это residuals.

49
00:03:10,036 --> 00:03:13,052
Не забывайте, что работает tab.

50
00:03:13,052 --> 00:03:18,098
Вот написали residu,
нажали tab, и тут – варианты.

51
00:03:18,098 --> 00:03:23,928
Мы выбираем residuals от model,
и можно посмотреть на вектор eps_hat.

52
00:03:23,928 --> 00:03:29,290
Это такой длинный вектор, это вектор ε с
крышкой, то есть некоторые ε с крышкой,

53
00:03:29,290 --> 00:03:33,059
видно, положительны, некоторые ε
с крышкой, видно, отрицательны.

54
00:03:33,059 --> 00:03:36,604
То есть где-то разница между фактическим
и предсказанным y в одну сторону,

55
00:03:36,604 --> 00:03:37,580
где-то – в другую.

56
00:03:37,580 --> 00:03:42,558
Я, на всякий случай, напомню, что сам y,
давайте его поместим для удобства в

57
00:03:42,558 --> 00:03:46,046
вектор y,
он живет в табличке d2 в переменной dist.

58
00:03:46,046 --> 00:03:51,493
В табличке d2 в переменной dist
живет наш y, а y прогнозное,

59
00:03:51,493 --> 00:03:57,708
y с крышкой, y_hat, его можно извлечь
из модели с помощью команды fitted,

60
00:03:57,708 --> 00:04:01,580
fitted, ну,
то есть означает «подогнанный», да.

61
00:04:01,580 --> 00:04:06,600
Fitted от модели, это наш,
то есть можно посмотреть на наш вектор y,

62
00:04:06,600 --> 00:04:10,900
а можно посмотреть на вектор
y с крышкой прогнозный.

63
00:04:10,900 --> 00:04:15,276
Помимо, соответственно, β с крышкой,

64
00:04:15,276 --> 00:04:19,058
остатков ε с крышкой, y, y с крышкой,

65
00:04:19,058 --> 00:04:24,300
можно также извлечь показатели RSS,
ESS, TSS, R2 и так далее.

66
00:04:24,300 --> 00:04:28,490
Соответственно, для RSS
есть специальная команда,

67
00:04:28,490 --> 00:04:34,570
команда называется deviance,
deviance от model – это есть RSS.

68
00:04:34,570 --> 00:04:40,160
Ну, такое название связано с неким
обобщением понятия RSS для других моделей.

69
00:04:40,160 --> 00:04:45,320
TSS, к сожалению, готовой команды нет,
но, благо, посчитать его руками несложно.

70
00:04:45,320 --> 00:04:46,191
Что такое TSS?

71
00:04:46,191 --> 00:04:48,871
Это сумма квадратов
отклонения y от среднего.

72
00:04:48,871 --> 00:04:50,480
Ну, давайте так и напишем.

73
00:04:50,480 --> 00:04:56,558
Если я напишу y-mean(y),
это будут отклонения y от среднего.

74
00:04:56,558 --> 00:05:03,430
Если я их возведу в квадрат,
это будут квадраты отклонения от среднего,

75
00:05:03,430 --> 00:05:08,200
а если я еще потом допишу
сумму от всего этого счастья,

76
00:05:08,200 --> 00:05:12,019
специально поставлю пробелы,
чтобы выражение легче читалось,

77
00:05:12,019 --> 00:05:15,230
то это и будет сумма квадратов
отклонения от среднего.

78
00:05:15,230 --> 00:05:17,672
И можно посмотреть, чему равен TSS.

79
00:05:17,672 --> 00:05:21,943
Ну, естественно, как мы и ожидали,
TSS больше, чем RSS,

80
00:05:21,943 --> 00:05:25,020
и можно, например, посчитать R².

81
00:05:25,020 --> 00:05:27,137
Я напомню, что R².

82
00:05:27,137 --> 00:05:32,440
Да, ESS, ESS – это,
естественно, TSS минус RSS.

83
00:05:32,440 --> 00:05:36,030
И можно посчитать R².

84
00:05:36,030 --> 00:05:39,687
R² – это доля объясненной дисперсии,

85
00:05:39,687 --> 00:05:45,300
то есть отношение объясненной
дисперсии ESS к TSS,

86
00:05:45,300 --> 00:05:49,810
и в нашем случае R² равен 0,65.

87
00:05:49,810 --> 00:05:55,850
И второй способ расчета коэффициента R²:
можно взять выборочную корреляцию между

88
00:05:55,850 --> 00:06:01,387
вектором Y и вектором Y с крышкой, то есть
взять корреляцию между Y и Y с крышкой,

89
00:06:01,387 --> 00:06:05,990
между фактическими значениями
тормозного пути и прогнозами,

90
00:06:05,990 --> 00:06:08,371
это будет выборочная корреляция.

91
00:06:08,371 --> 00:06:12,195
А если я эту выборочную
корреляцию возведу в квадрат,

92
00:06:12,195 --> 00:06:15,340
то у меня получится ни что иное, как R².

93
00:06:15,340 --> 00:06:19,070
То есть два способа посчитать R²,
можно так,

94
00:06:19,070 --> 00:06:23,130
можно как выборочную корреляцию.

95
00:06:23,130 --> 00:06:25,713
Соответственно, что еще.

96
00:06:25,713 --> 00:06:28,112
Матрицу X тоже можно извлечь.

97
00:06:28,112 --> 00:06:32,552
Иногда это бывает нужно в некоторых целях,
ну, давайте в учебных целях из нашей

98
00:06:32,552 --> 00:06:37,656
модели, есть такое понятие model.matrix,
model.matrix,

99
00:06:37,656 --> 00:06:42,767
и, соответственно,
мы здесь можем вот посмотреть

100
00:06:42,767 --> 00:06:47,390
как выглядела матрица X
большое для нашей модели.

101
00:06:47,390 --> 00:06:53,350
Ну, если на нее посмотреть, написать X,
нажать Ctrl + Enter, то это действительно

102
00:06:53,350 --> 00:06:59,713
матрица размера количества наблюдений 50,
и два столбика у нее.

103
00:06:59,713 --> 00:07:05,680
Первый столбик из единичек, второй столбик
из, соответственно, скоростей машины.

104
00:07:05,680 --> 00:07:10,328
Ну, после того, что мы все извлекли
из модели, мы можем, например,

105
00:07:10,328 --> 00:07:14,842
спрогнозировать, можем использовать
нашу модель для прогнозирования.

106
00:07:14,842 --> 00:07:20,558
Давайте для этого создадим новый набор
данных, nd, новый набор данных, это

107
00:07:20,558 --> 00:07:25,701
будет data.frame, в котором есть только
переменная speed, и она будет равна.

108
00:07:25,701 --> 00:07:29,508
Ну, допустим, я хочу спрогнозировать
длину тормозного пути для машины,

109
00:07:29,508 --> 00:07:33,061
которая движется, ну,
которая характеристик 1920-х годов,

110
00:07:33,061 --> 00:07:36,990
которые движутся одна со скоростью
40 километров в час, а другая – 60.

111
00:07:36,990 --> 00:07:39,330
Сколько им потребуется на торможение?

112
00:07:39,330 --> 00:07:42,659
Соответственно, это вот я
создал новый набор данных,

113
00:07:42,659 --> 00:07:45,680
давайте посмотрим на него,
нажмем nd, Enter.

114
00:07:45,680 --> 00:07:48,505
Вот.
Это просто набор данных с одним вектором и

115
00:07:48,505 --> 00:07:50,416
два наблюдения, 40 и 60.

116
00:07:50,416 --> 00:07:54,030
И теперь я могу спрогнозировать,
команда predict,

117
00:07:54,030 --> 00:07:57,253
и спрогнозировать с помощью модели,
которую я создал,

118
00:07:57,253 --> 00:08:00,550
потому что прогнозы по разным
моделям могут отличаться.

119
00:08:00,550 --> 00:08:05,919
Соответственно, использую модель под
названием «модель для прогнозирования»,

120
00:08:05,919 --> 00:08:08,060
а данные беру из набора данных nd.

121
00:08:08,060 --> 00:08:12,911
И у меня получается, что, ну, при тех
характеристиках, у первой на торможение

122
00:08:12,911 --> 00:08:18,630
ушло бы 23 метра, а у второй на
тормозной путь ушло бы 37 метров.

123
00:08:18,630 --> 00:08:23,469
И помимо того,
что мы можем спрогнозировать для нового

124
00:08:23,469 --> 00:08:28,426
набора данных по модели, мы также можем
визуализировать результаты оценивания,

125
00:08:28,426 --> 00:08:32,673
то есть построить на этом же графике,
где находится диаграмма рассеивания,

126
00:08:32,673 --> 00:08:34,620
нарисовать оцененную нами линию.

127
00:08:34,620 --> 00:08:38,501
Ну и, соответственно, просто скопируем
код старого графика вот qplot,

128
00:08:38,501 --> 00:08:41,650
data равно d2, по горизонтали speed,
по вертикали dist.

129
00:08:41,650 --> 00:08:46,841
Скопируем этот код и, соответственно,

130
00:08:46,841 --> 00:08:50,378
воспользуемся тем, что пакет ggplot2,

131
00:08:50,378 --> 00:08:54,561
в котором живет функция qplot,
позволяет рисовать графики по слоям,

132
00:08:54,561 --> 00:08:59,140
то есть мы напишем плюс и напишем,
что надо указать на новом слое.

133
00:08:59,140 --> 00:09:04,821
На новом слое надо указать кривую,
заменяющую точки, то есть

134
00:09:04,821 --> 00:09:08,350
в каком-то смысле сглаживающую кривую,
поэтому эта опция называется stat_smooth,

135
00:09:08,350 --> 00:09:13,970
и указать метод,
которым получена эта кривая, метод lm.

136
00:09:13,970 --> 00:09:16,119
Есть, конечно, и другие методы.

137
00:09:16,119 --> 00:09:22,804
И, соответственно, нажимаем Ctrl +
Enter и получаем тот же самый график,

138
00:09:22,804 --> 00:09:27,350
но только уже нанесена наша прямая,
которая, я напомню,

139
00:09:27,350 --> 00:09:31,770
имеет уравнение, сейчас мы посмотрим,
вот наша модель,

140
00:09:31,770 --> 00:09:37,130
минус 5 плюс 0,7 умножить на speed.

141
00:09:37,130 --> 00:09:41,801
Соответственно, мы на данном примере
научились оценивать простейшую модель

142
00:09:41,801 --> 00:09:47,191
методом наименьших квадратов,
извлекать интересующие нас показатели,

143
00:09:47,191 --> 00:09:51,961
как то: оценки коэффициентов,
ε с крышкой, Y с крышкой,

144
00:09:51,961 --> 00:09:56,750
RSS, TSS, ESS, R²,
даже двумя способами, матрицу X,

145
00:09:56,750 --> 00:10:02,570
научились прогнозировать и визуализировать
результаты оценивания на графике.

