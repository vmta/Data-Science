1
00:00:12,175 --> 00:00:19,080
Теперь перейдем к анализу
какого-нибудь набора данных.

2
00:00:19,080 --> 00:00:23,100
Мы вернемся ко встроенному
набору данных по инвестициям,

3
00:00:23,100 --> 00:00:29,844
d <- Investment.

4
00:00:29,844 --> 00:00:35,200
Превратим его в неупорядоченный

5
00:00:35,200 --> 00:00:43,235
временной ряд: as.zoo(Investment).

6
00:00:43,235 --> 00:00:46,510
Можно посмотреть на те же самые графики,

7
00:00:46,510 --> 00:00:52,200
au_toplot(d),

8
00:00:52,200 --> 00:00:57,120
скажем, построим графики первого,
второго столбика: au_toplot(d[,1:2]),

9
00:00:57,120 --> 00:01:00,797
это у нас будет инвестиции и GNP.

10
00:01:00,797 --> 00:01:06,750
Давайте нанесем их на один график,

11
00:01:11,115 --> 00:01:15,480
так они будут занимать меньше
места и будут лучше видны.

12
00:01:15,480 --> 00:01:22,362
А теперь попробуем оценить модель

13
00:01:22,362 --> 00:01:27,170
с помощью метода наименьших квадратов,
и посмотреть, есть ли автокорреляция,

14
00:01:27,170 --> 00:01:32,302
и побороться с ней, поскольку логично
ее ожидать, ведь у нас временной ряд,

15
00:01:32,302 --> 00:01:36,004
и логично, что сегодняшний
показатель зависит от вчерашнего.

16
00:01:36,004 --> 00:01:39,804
Посмотрим, от чего зависят
реальные инвестиции.

17
00:01:39,804 --> 00:01:44,981
Значит, оценим модель,
равняется линейная модель.

18
00:01:44,981 --> 00:01:49,591
Данные возьмем из набора
данных d и посмотрим,

19
00:01:49,591 --> 00:01:54,790
от чего зависит переменная
реальной инвестиции.

20
00:01:54,790 --> 00:02:01,264
И в качестве объясняющих возьмем
реальную процентную ставку и,

21
00:02:01,264 --> 00:02:06,430
соответственно, реальный GNP.

22
00:02:11,140 --> 00:02:15,850
Оценили модель, как всегда, смотрим,
что у нас там получилось: summary(model).

23
00:02:15,850 --> 00:02:20,800
Можем посмотреть

24
00:02:20,800 --> 00:02:25,810
на проверку гипотез о
равенстве коэффициентов нулю

25
00:02:25,810 --> 00:02:31,320
и можем посмотреть
доверительные интервалы,

26
00:02:31,320 --> 00:02:34,830
confint(model).

27
00:02:34,830 --> 00:02:40,003
Соответственно, мы видим, что увеличение

28
00:02:40,003 --> 00:02:46,385
реального GNP на 1 приводит к
увеличению инвестиций на 0.16,

29
00:02:46,385 --> 00:02:51,651
увеличение процентной ставки негативно
сказывается на объеме инвестиций.

30
00:02:51,651 --> 00:02:55,864
Попробуем определить теперь,
есть ли в нашей модели автокорреляция.

31
00:02:55,864 --> 00:03:00,742
Для этого сначала посмотрим на графики
остатков, как текущее значение остатка

32
00:03:00,742 --> 00:03:04,077
модели зависит от прошлого
значения остатков модели.

33
00:03:04,077 --> 00:03:07,866
Для этого сначала дополним наш
исходный массив данных d с помощью

34
00:03:07,866 --> 00:03:11,005
оцененных показателей,
то есть с помощью остатков,

35
00:03:11,005 --> 00:03:14,700
с помощью прогнозных значений,
ну, а потом построим график.

36
00:03:14,700 --> 00:03:20,030
Значит, d_aug = augment(model),

37
00:03:20,030 --> 00:03:24,449
мы пополняем с помощью нашей

38
00:03:24,449 --> 00:03:29,060
модели и пополняем с помощью
нее наш набор данных d.

39
00:03:29,060 --> 00:03:33,954
Тут есть небольшой нюанс: набор
данных d является временным рядом,

40
00:03:33,954 --> 00:03:39,211
а не табличкой с данными, с точки зрения
R, поэтому нам его надо сначала превратить

41
00:03:39,211 --> 00:03:44,570
в табличку с данными, as.data.frame(d).

42
00:03:44,570 --> 00:03:48,066
Давайте посмотрим,

43
00:03:48,066 --> 00:03:52,730
что из себя представляет наша новая,
пополненная табличка с данными.

44
00:03:52,730 --> 00:03:58,345
И мы видим, что помимо исходных
показателей GNP, Investment, Price,

45
00:03:58,345 --> 00:04:03,623
Interest, RealGNP, RealInv,
RealInt, есть еще показатели,

46
00:04:03,623 --> 00:04:09,764
которые добавились после оценки моделей,
а именно остатки, прогнозные значения,

47
00:04:09,764 --> 00:04:14,490
ну, и там стандартизированные
остатки и другие показатели.

48
00:04:14,490 --> 00:04:19,020
Нас интересуют в данном случае остатки:
как сегодняшний остаток зависит от

49
00:04:19,020 --> 00:04:20,980
вчерашнего и зависит ли вообще.

50
00:04:20,980 --> 00:04:24,184
Для начала мы построим график.

51
00:04:24,184 --> 00:04:29,696
Возьмем данные из вот этого
расширенного набора данных d.

52
00:04:29,696 --> 00:04:37,091
По горизонтали отложим предыдущий остаток,
то есть lag (.resid),

53
00:04:37,091 --> 00:04:42,620
а по вертикали отложим текущее
значение остатка, .resid.

54
00:04:42,620 --> 00:04:47,758
Наблюдений у нас, конечно, немного.

55
00:04:47,758 --> 00:04:53,810
Давайте увеличим картинку,
чтобы она влезла в экран.

56
00:04:53,810 --> 00:04:57,804
Но, тем не менее, несмотря на
небольшое количество наблюдений,

57
00:04:57,804 --> 00:05:02,640
можно говорить все-таки о
положительной небольшой корреляции.

58
00:05:02,640 --> 00:05:07,841
Посмотрите, действительно, если прошлое
значение остатка было больше 0,

59
00:05:07,841 --> 00:05:11,310
то есть если предыдущий
остаток был больше 0,

60
00:05:11,310 --> 00:05:16,654
то и последующий остаток… большинство из
них находится в правой верхней четверти.

61
00:05:16,654 --> 00:05:21,215
Это означает, что если предыдущий
остаток был положительным, то,

62
00:05:21,215 --> 00:05:24,060
скорее всего,
и следующий будет положительным.

63
00:05:24,060 --> 00:05:28,973
И, наоборот, если вот предыдущий
остаток был отрицательным, меньше 0,

64
00:05:28,973 --> 00:05:33,601
то это говорит, скорее,
о меньших значениях сегодняшнего остатка,

65
00:05:33,601 --> 00:05:36,550
а это является признаком автокорреляции.

66
00:05:36,550 --> 00:05:44,198
Как мы знаем из лекции, при автокорреляции
использование проверки гипотез,

67
00:05:44,198 --> 00:05:49,550
которую статистический пакет выполняет
по умолчанию, не является корректным.

68
00:05:49,550 --> 00:05:53,158
Нам нужно откорректировать стандартные
ошибки, чтобы правильно состоятельно

69
00:05:53,158 --> 00:05:56,200
проверять гипотезы и правильно
строить доверительные интервалы.

70
00:05:56,200 --> 00:06:03,714
Посмотрим на ковариационную матрицу
оценок коэффициентов, vcov(model).

71
00:06:03,714 --> 00:06:06,730
Эта матрица рассчитана тем способом,

72
00:06:06,730 --> 00:06:11,694
который не является состоятельным
в условиях автокорреляции,

73
00:06:11,694 --> 00:06:16,522
то есть вот это вот 620 является плохой

74
00:06:16,522 --> 00:06:22,248
оценкой для дисперсии свободного члена,
а вот эта, 5,61 – это, опять же,

75
00:06:22,248 --> 00:06:28,900
несостоятельная оценка для дисперсии
β с крышкой при реальных инвестициях.

76
00:06:28,900 --> 00:06:33,660
Мы можем легко подправить эту матрицу,
то есть использовать

77
00:06:33,660 --> 00:06:38,420
алгоритм расчета,
устойчивый к автокорреляции,

78
00:06:38,420 --> 00:06:46,524
vcovHAC (model), и получить другие оценки.

79
00:06:46,524 --> 00:06:52,579
И мы видим, что оценки, робастные к
автокорреляции, существенно выше.

80
00:06:52,579 --> 00:06:58,216
Здесь оценка дисперсии, например,
коэффициента при реальной процентной

81
00:06:58,216 --> 00:07:03,749
ставке – 5,6, здесь та же самая
дисперсия практически в три раза больше.

82
00:07:03,749 --> 00:07:08,487
Это говорит о том, что способ построения
доверительных интервалов по умолчанию

83
00:07:08,487 --> 00:07:12,654
занижает их ширину, и правильные
доверительные интервалы будут шире.

84
00:07:12,654 --> 00:07:17,902
Давайте попробуем сделать корректную
проверку гипотез и, соответственно,

85
00:07:17,902 --> 00:07:22,730
построить правильные
доверительные интервалы.

86
00:07:22,730 --> 00:07:27,794
Используем функцию coeftest
на отсутствие воздействия

87
00:07:27,794 --> 00:07:33,020
объясняющих переменных на зависимую,
то есть coeftest(model),

88
00:07:33,020 --> 00:07:37,354
и, соответственно, указываем,

89
00:07:37,354 --> 00:07:42,240
что ковариационная матрица должна
использоваться правильная,

90
00:07:42,240 --> 00:07:46,650
vcoHAC(model).

91
00:07:46,650 --> 00:07:51,060
Можно сравнить результаты

92
00:07:51,060 --> 00:07:56,460
исходного теста и теста

93
00:07:56,460 --> 00:08:04,860
с использованием робастной
автокорреляции ковариационной матрицы.

94
00:08:04,860 --> 00:08:06,778
Ну, мы видим, что, к счастью,

95
00:08:06,778 --> 00:08:10,824
качественно результаты о значимости
коэффициентов не поменялись.

96
00:08:10,824 --> 00:08:14,601
Первые два, как были незначимы,
так и остались незначимы.

97
00:08:14,601 --> 00:08:18,965
Третий коэффициент, как был значим,
так и остался значим.

98
00:08:18,965 --> 00:08:23,212
Теперь построим корректные
доверительные интервалы.

99
00:08:23,212 --> 00:08:29,615
Для начала результаты расчета стандартных
ошибок поместим в отдельную табличку,

100
00:08:29,615 --> 00:08:34,750
назовем ее conftable.

101
00:08:34,750 --> 00:08:41,971
Для построения доверительных интервалов из
этой таблички нам потребуется только два,

102
00:08:41,971 --> 00:08:48,160
собственно, показателя: самооценка и ее
корректно рассчитанная стандартная ошибка.

103
00:08:48,160 --> 00:08:53,621
Соответственно, в табличку ci мы поместим

104
00:08:53,621 --> 00:09:00,650
только их, 

105
00:09:00,650 --> 00:09:05,810
data.frame(estimate=conftable[,1],se_ac= conftable[,2].

106
00:09:05,810 --> 00:09:14,350
data.frame(estimate=conftable[,1],se_ac= conftable[,2].

107
00:09:14,350 --> 00:09:20,930
data.frame(estimate=conftable[,1],se_ac= conftable[,2].

108
00:09:20,930 --> 00:09:28,192
Значит, создали ci,
посмотрим на табличку ci.

109
00:09:28,192 --> 00:09:34,304
В ней в настоящий момент есть
оценки и стандартные ошибки,

110
00:09:34,304 --> 00:09:37,430
устойчивые к автокорреляции.

111
00:09:37,430 --> 00:09:45,130
Соответственно, нам надо добавить
mu_tate мы изменяем наш набор данных ci,

112
00:09:45,130 --> 00:09:51,775
и добавляем левые границы 95%-го 
интервала как оценки -1,

113
00:09:51,775 --> 00:09:56,970
96 помножить на стандартные
ошибки и правую

114
00:09:56,970 --> 00:10:02,470
границу доверительного
интервала добавляем как

115
00:10:02,470 --> 00:10:08,680
оценку +1,96

116
00:10:08,680 --> 00:10:13,970
помножить на стандартную ошибку,
устойчивую к автокорреляции.

117
00:10:13,970 --> 00:10:19,556
Когда мы это сделали, можем посмотреть
на посчитанные доверительные

118
00:10:19,556 --> 00:10:25,270
интервалы для оценок коэффициентов
и сравнить их с исходными, которые

119
00:10:25,270 --> 00:10:30,140
посчитаны с использованием формулы по
умолчанию, не учитывающей автокорреляцию.

120
00:10:30,140 --> 00:10:37,559
Если я посмотрю confint(model) и
правильный доверительный интервал,

121
00:10:37,559 --> 00:10:43,453
то мы видим,
что в нашем примере доверительный интервал

122
00:10:43,453 --> 00:10:50,280
для коэффициента при эффекте от
реального GNP практически не поменялся,

123
00:10:50,280 --> 00:10:55,349
был от 0.12 до 0.21,
стал от 0.12 до 0.21, а вот,

124
00:10:55,349 --> 00:11:00,203
например, доверительный интервал
для коэффициента измеряющего

125
00:11:00,203 --> 00:11:05,062
эффекта изменения процентной ставки,
раньше мы были уверены,

126
00:11:05,062 --> 00:11:10,118
что коэффициент лежит от -6 до 4
с уровнем доверия 95-%, то сейчас

127
00:11:10,118 --> 00:11:14,995
уже доверительный интервал шире, то есть
наша оценка оказывается в реальности менее

128
00:11:14,995 --> 00:11:20,900
точной из-за автокорреляции,
и эффект составляет от -8.5 до 6.5.

