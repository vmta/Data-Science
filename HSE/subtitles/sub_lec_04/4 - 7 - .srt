1
00:00:14,335 --> 00:00:20,440
Приступим к компьютерной
части четвёртой недели.

2
00:00:20,440 --> 00:00:26,335
Запускаем RStudio, открываем заранее
заготовленный файл с загрузкой пакетов,

3
00:00:26,335 --> 00:00:29,400
который нам понадобится, lab_04_beforeR.

4
00:00:29,400 --> 00:00:34,470
Это пакеты, которые потребуются нам
для работы с мультиколлинеарностью,

5
00:00:34,470 --> 00:00:35,787
и методы главных компонент.

6
00:00:35,787 --> 00:00:38,529
Мы их быстренько пробегаем Ctrl+Enter,
чтобы запустить,

7
00:00:38,529 --> 00:00:42,821
чтобы компьютер узнал команды, которые в
них содержатся, и приступаем к работе.

8
00:00:42,821 --> 00:00:45,920
Мы рассмотрим тот же набор данных,
что и в первой лекции.

9
00:00:45,920 --> 00:00:51,702
В табличку данных h мы поместим
данные из набора по машинам.

10
00:00:51,702 --> 00:00:54,655
Я на всякий случай напомню,
что это за набор данных.

11
00:00:54,655 --> 00:00:57,389
Лучше всего напомнить, построив график.

12
00:00:57,389 --> 00:01:00,765
Данные возьмём для графика
из набора данных h.

13
00:01:00,765 --> 00:01:05,490
По горизонтали отложим скорость машины,
по вертикали — длину тормозного пути.

14
00:01:05,490 --> 00:01:09,440
Вот он наш набор данных на графике.

15
00:01:09,440 --> 00:01:14,290
И, соответственно, я напомню,
что мы строили, ну мы там, конечно,

16
00:01:14,290 --> 00:01:18,567
переводили футы и скорость из миль
в час в привычные нам единицы.

17
00:01:18,567 --> 00:01:20,740
Мы сейчас не будем этого делать.

18
00:01:20,740 --> 00:01:23,750
И, соответственно,
мы строили простую модель.

19
00:01:23,750 --> 00:01:29,480
Простая линейная модель,
данные брали из набора данных h.

20
00:01:29,480 --> 00:01:34,660
И, соответственно, как зависит длина
тормозного пути (distance) от скорости.

21
00:01:34,660 --> 00:01:39,650
Если посмотреть на отчёт по этой модели,
то в этой модели,

22
00:01:39,650 --> 00:01:42,731
конечно, никакой мультиколлинеарности нет.

23
00:01:42,731 --> 00:01:45,586
Видно, что коэффициент прекрасно значим.

24
00:01:45,586 --> 00:01:49,102
Ну а раз коэффициент значим,
то проблемы мультиколлинеарности не стоит,

25
00:01:49,102 --> 00:01:51,285
потому что мультиколлинеарность
проявляется в том,

26
00:01:51,285 --> 00:01:54,090
что у нас широкий доверительный
интервал и коэффициенты незначимы.

27
00:01:54,090 --> 00:01:58,450
Однако я ж на самом-то деле,
когда гляжу на этот график, я не знаю,

28
00:01:58,450 --> 00:02:03,271
зависит ли, зависимость является
тут идеально линейной или,

29
00:02:03,271 --> 00:02:06,670
может быть, здесь слабая квадратическая
зависимость или кубическая.

30
00:02:06,670 --> 00:02:11,138
Ну и поскольку я этого не знаю,
давайте я создам две новых переменных.

31
00:02:11,138 --> 00:02:14,505
Я добавлю в набор данных h,
команда mutate,

32
00:02:14,505 --> 00:02:19,782
добавлю квадрат скорости
и добавлю куб скорости.

33
00:02:19,782 --> 00:02:24,436
Назову его speed3, это скорость в кубе.

34
00:02:24,436 --> 00:02:30,052
И, соответственно, оценю модель,
в которую я постараюсь,

35
00:02:30,052 --> 00:02:34,450
я включу и скорость,
и скорость в квадрате, и скорость в кубе.

36
00:02:34,450 --> 00:02:35,776
Это будет модель...

37
00:02:35,776 --> 00:02:39,625
Ну как мы бы заранее ожидаем,
что там будет мультиколлинеарность.

38
00:02:39,625 --> 00:02:44,800
Это будет линейная модель по
тому же самому набору данных h,

39
00:02:44,800 --> 00:02:50,769
но теперь я предполагаю, что длина
тормозного пути объясняется скоростью,

40
00:02:50,769 --> 00:02:54,780
квадратом скорости и,
возможно, кубом скорости.

41
00:02:54,780 --> 00:03:00,020
И если я посмотрю на эту модель,
summary(model_mk),

42
00:03:00,020 --> 00:03:06,200
то здесь я увижу, что у меня нет
ни одного значимого коэффициента.

43
00:03:06,200 --> 00:03:12,399
Гипотеза о том, что нет зависимости от
скорости, не отвергается, p-value 0,32.

44
00:03:12,399 --> 00:03:16,560
Гипотеза о том, что нет зависимости
от квадрата скорости, не отвергается.

45
00:03:16,560 --> 00:03:21,560
Гипотеза о том, что нет зависимости от
куба скорости, тоже не отвергается.

46
00:03:21,560 --> 00:03:26,157
То есть нет основания отвергать гипотезу
о том, что какой-то зависимости нет.

47
00:03:26,157 --> 00:03:29,927
Однако если посмотреть на F-статистику,
которая проверяет гипотезу

48
00:03:29,927 --> 00:03:34,650
о значимости регрессии в целом,
то гипотеза о значимости,

49
00:03:34,650 --> 00:03:39,310
то мы приходим к выводу,
что регрессия в целом значима.

50
00:03:39,310 --> 00:03:42,997
Гипотеза о том, что все три коэффициента
при скорости, при скорости в квадрате и

51
00:03:42,997 --> 00:03:46,678
при скорости в кубе, гипотеза о том,
что все эти три коэффициента равны нулю,

52
00:03:46,678 --> 00:03:49,780
отвергается: p-value здесь 
3 на 10 в минус одиннадцатой.

53
00:03:49,780 --> 00:03:52,535
Соответственно, от
чего-то зависимость есть,

54
00:03:52,535 --> 00:03:56,835
но от чего — непонятно: вот у нас перед
нами ситуация мультиколлинеарности.

55
00:03:56,835 --> 00:04:00,893
Действительно, мы можем с помощью
корреляции между отдельными регрессорами и

56
00:04:00,893 --> 00:04:03,700
показателя коэффициента
вздутия дисперсии увидеть,

57
00:04:03,700 --> 00:04:06,298
что имеются признаки мультиколлинеарности.

58
00:04:06,298 --> 00:04:10,860
Если я посмотрю, попрошу компьютер
посчитать коэффициенты вздутия дисперсии,

59
00:04:10,860 --> 00:04:15,890
то я увижу, что у меня коэффициент вздутия
дисперсии, то есть один делить на один

60
00:04:15,890 --> 00:04:20,920
минус R² в регрессии скорости на
остальные объясняющие переменные,  274.

61
00:04:20,920 --> 00:04:24,967
Аналогично для скорости в квадрате 
1000 с лишним и для скорости в кубе 62
00:04:24,967 --> 00:04:25,764
около 500.

63
00:04:25,764 --> 00:04:31,227
То есть у нас есть индикация
мультиколлинеарности.

64
00:04:31,227 --> 00:04:33,893
И аналогично мы можем
посмотреть на корреляции.

65
00:04:33,893 --> 00:04:35,740
Давайте мы создадим матрицу х0.

66
00:04:35,740 --> 00:04:40,411
Матрица х0 — это будет, это будут наши
регрессоры только без свободного члена.

67
00:04:40,411 --> 00:04:43,826
Для этого мы воспользуемся
командой model.matriх.

68
00:04:43,826 --> 00:04:49,098
И здесь в команде model.matriх надо
указать, откуда берутся данные.

69
00:04:49,098 --> 00:04:51,537
Данные берутся из набора данных h.

70
00:04:51,537 --> 00:04:53,420
И дальше указать формулу.

71
00:04:53,420 --> 00:04:56,500
Но по умолчанию,
если написать ту же саму формулу,

72
00:04:56,500 --> 00:05:00,840
компьютер добавит единичный столбец,
а он нам для расчёта корреляций не нужен.

73
00:05:00,840 --> 00:05:03,481
Поэтому мы тут напишем 0 +.

74
00:05:03,481 --> 00:05:09,148
Это означает, что я получу все регрессоры,
кроме единичного столбца.

75
00:05:09,148 --> 00:05:11,937
Ну можно посмотреть на эту матрицу х0.

76
00:05:11,937 --> 00:05:16,910
Вот, действительно, здесь скорость,
квадрат скорости и куб скорости.

77
00:05:16,910 --> 00:05:21,110
И можно посчитать корреляцию
между регрессорами и увидеть,

78
00:05:21,110 --> 00:05:24,270
что корреляция между регрессорами высокая.

79
00:05:24,270 --> 00:05:29,970
Вон самая низкая — 0,94,
а так есть 0,97, 0,99.

80
00:05:29,970 --> 00:05:36,712
Соответственно, для чего
используются модели?

81
00:05:36,712 --> 00:05:39,736
Ну модели используются
для прогнозирования.

82
00:05:39,736 --> 00:05:42,891
Давайте посмотрим, насколько разные
выходят прогнозы по модели с

83
00:05:42,891 --> 00:05:46,810
мультиколлинеарностью с кучей переменных,
незначимых по отдельности, и без.

84
00:05:46,810 --> 00:05:50,030
Для этого создадим новый набор данных nd.

85
00:05:50,030 --> 00:05:53,080
Это будет набор данных, data.frame.

86
00:05:53,080 --> 00:05:57,740
Значит, скорость будет равняться,
пусть будет 10 миль в час.

87
00:05:57,740 --> 00:06:01,600
Соответственно, квадрат скорости
обязан равняться ста милям в час,

88
00:06:01,600 --> 00:06:06,750
и куб скорости обязан
равняться тысяче миль в час.

89
00:06:06,750 --> 00:06:12,690
И я построю два интервала.

90
00:06:12,690 --> 00:06:18,449
Построю интервал по модели

91
00:06:18,449 --> 00:06:26,420
с одной объясняющей переменной
для набора данных newdata=nd.

92
00:06:26,420 --> 00:06:32,110
И тип интервала,
interval укажу "prediction".

93
00:06:32,110 --> 00:06:39,577
Соответственно, вот это — это
прогнозный интервал предиктивный

94
00:06:39,577 --> 00:06:45,885
для модели с одной объясняющей
переменной без мультиколлинеарности.

95
00:06:45,885 --> 00:06:50,546
И лёгким движением руки я построю
доверительный интервал по

96
00:06:50,546 --> 00:06:53,270
модели с мультиколлинеарностью.

97
00:06:53,270 --> 00:06:57,640
Я вижу,

98
00:06:57,640 --> 00:07:01,373
что доверительный интервал
поменялся совсем несущественно.

99
00:07:01,373 --> 00:07:05,876
Несмотря на то, что там был один значимый
коэффициент, а здесь три и незначимых,

100
00:07:05,876 --> 00:07:11,282
доверительный интервал для
прогноза был от минус 9,8 до 53-х,

101
00:07:11,282 --> 00:07:13,816
а стал от минус 7,8 до 55,4.

102
00:07:13,816 --> 00:07:21,300
Причём точечный прогноз изменился от 21-го
фута до 23-х футов, то есть несущественно.

103
00:07:21,300 --> 00:07:26,272
Однако если я посмотрю на значимость и

104
00:07:26,272 --> 00:07:31,110
доверительные интервалы для отдельных
коэффициентов, то разница существенная.

105
00:07:31,110 --> 00:07:39,029
Если я наберу, хочу доверительные
интервалы для коэффициентов модели,

106
00:07:39,029 --> 00:07:43,623
то здесь у меня коэффициент
при скорости — я

107
00:07:43,623 --> 00:07:48,715
оцениваю увеличение скорости на одну
милю в час — приводит к увеличению

108
00:07:48,715 --> 00:07:53,009
длины тормозного пути
от трёх до 4,7 футов.

109
00:07:53,009 --> 00:07:58,403
Однако если я построю
доверительный интервал для модели с

110
00:07:58,403 --> 00:08:05,260
мультиколлинеарностью, то доверительный
интервал окажется существенно шире.

111
00:08:05,260 --> 00:08:09,015
Коэффициент, аналогичный
коэффициенту при скорости,

112
00:08:09,015 --> 00:08:13,570
вот коэффициент при скорости во второй
модели, — для него доверительный интервал

113
00:08:13,570 --> 00:08:18,520
уже не от 3-х до 4,7,
а от минус 6,8 до 20-ти.

114
00:08:18,520 --> 00:08:25,483
Соответственно, мы на данном примере
проиллюстрировали мысль о том,

115
00:08:25,483 --> 00:08:29,760
что если нас интересует
доверительный интервал для прогноза,

116
00:08:29,760 --> 00:08:32,861
то мультиколлинеарность для нас
не составляет никаких проблем.

117
00:08:32,861 --> 00:08:36,140
Однако если мы хотим понять,
от какой переменной у нас зависимость,

118
00:08:36,140 --> 00:08:39,589
и построить как можно более
узкий доверительный интервал,

119
00:08:39,589 --> 00:08:43,660
то мультиколлинеарность может быть
для нас некоторым препятствием.

