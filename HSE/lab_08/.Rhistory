dfsdf
install.packages(c("knitr", "erer", "quantmod", "dplyr", "reshape2", "stringr", "ggplot2"))
a = 5
b
b = 6
a <- 5
b = 4
1/Inf
Inf+5
Inf-Inf
5+6
a <- 7
b <- 4
a + b
moe_lubimoe_chislo <- 9
moe_lubimoe_chislo
cos(pi)
NA
NaN
Inf
0/0
1/0
NA + 5
Inf + 5
Inf*(-1)
Inf-Inf
A <- 9
a + A
MOE_LUBIMOE_CHISLO
r = 7
r <- 8
9 -> b
b
y <- c(6,-2,3,NA,5)
y
y^2
y + 7
z <- 100:200
z
5 + 7
a <- 9
b <- 11
a*b
d <- a*b
moe_lubimoe_chislo <- 12
moe_lubimoe_chislo
MOE_LUBIMOE_CHISLO + 9
moe_lubimoe_chislo + 9
t = 9
t <- 9
y <- c(3,-2,5,6,NA,9)
y
y^2
y - 1
NaN
Inf
t <- 0/0
t
1/0
Inf*(-1)
1/Inf
atan(Inf)
pi/2
z <- 100:200
z
coss(pi)
cos(pi)
5 + 6 + 7 - 9 +
10 + 7
cos(pi
)
cos(pi)+ sin(
z <- 100:200
w <- 300:400
z
z <- 100:200
w <- 300:400
z
d <- data.table(rost=z,ves=w)
x <- c(23,15,46,NA)
z <- c(5,6,NA,8)
mean(x)
mean(x,na.rm = TRUE)
mean(z,na.rm = TRUE)
sum(x)
sum(x,na.rm = TRUE)
d <- data.frame(rost=x,ves=z)
d
d[4,1]
d[3,1]
d[2,]
d[,2]
d$rost
d$ves
my_list <- list(a=7,b=10:20,d)
my_list$a
my_list$b
my_list$d
my_list <- list(a=7,b=10:20,d=d)
my_list$d
d$rost
d$ves
d[4,1]
d[3,1]
d[2,]
d[,2]
d$rost
d$ves
my_list <- list(a=7,b=10:20,table=d)
my_list$a
my_list$b
my_list$table
d$rost
my_list[[2]]
install.packages("GGally")
library("ggplot2")
library("dplyr")
library("GGally")
ggpairs(cars)
ggpairs(swiss)
plotmatrix(swiss)
GGally::ggpairs(swiss)
install.packages("psych")
library("psych")
library("dplyr")
library("ggplot2")
library("GGally")
d <- cars
glimpse(d)
help(cars)
head(d)
tail(d)
describe(d)
ncol(d)
nrow(d)
str(d)
mean(d$speed)
d2 <- mutate(d, speed=1.67*speed,
dist=0.3*dist, ratio=dist/speed)
glimpse(d2)
qplot(data=d,dist)
qplot(data=d,dist,xlab="Длина тормозного пути (м)",
ylab="Число машин",main="Данные по машинам 1920х")
qplot(data=d,speed,dist)
model <- lm(data=d, dist~speed)
model
coef(model)
residuals(model)
fitted(model)
deviance(model)
TSS <- sum((d$dist-mean(d$dist))^2)
TSS
r2 <- 1-deviance(model)/TSS
r2
model.matrix(model)
coef(model)
nd <- data.frame(speed=c(40,60))
nd
predict(model,nd)
r2
t <- swiss
help(swiss)
glimpse(t)
describe(t)
ggpairs(t)
model2 <- lm(data=t,
Fertility~Agriculture+Education+Catholic)
coef(model2)
fitted(model2)
residuals(model2)
deviace(model2)
deviance(model2)
report <- summary(model2)
report
report$r.squared
cor(t$Fertility,fitted(model2))
cor(t$Fertility,fitted(model2))^2
nd2 <- data.frame(Agriculture=0.5,Catholic=0.5,
Education=20)
predict(model2,nd2)
install.packages(c("dplyr", "ggplot2", "GGally", "psych"))
install.packages("devtools")
library("devtools")
install_github("bdemeshev/sophisthse")
library("dplyr")
library("ggplot2")
library("GGally")
library("psych")
help(predict)
help(describe)
help(lm)
library("HSAUR")
library("dplyr")
library("psych")
library("lmtest")
library("glmnet")
library("car")
library("ggplot2")
install.packages(c("HSAUR", "glmnet"))
library("HSAUR")
library("dplyr")
library("psych")
library("lmtest")
library("glmnet")
library("ggplot2")
library("car")
h <- cars
qplot(h$speed,h$dist)
h <- mutate(h,speed2=speed^2,speed3=speed^3)
model_mk <- lm(dist~speed+speed2+speed3,data=h)
summary(model_mk)
vif(model_mk)
library("HSAUR")
library("dplyr")
library("psych")
library("lmtest")
library("glmnet")
library("ggplot2")
library("car")
h <- cars
qplot(data=h, speed, dist)
h <- mutate(h, speed2=speed^2, speed3=speed^3)
model_mk <- lm(data=h, dist~speed+speed2+speed3)
summary(model_mk)
vif(model_mk)
X0 <- model.matrix(data=h, dist~0+speed+speed2+speed3)
head(X0)
cor(X0)
confint(model_mk)
coeftest(model_mk)
nd <- data.frame(speed=10,speed2=100,speed3=1000)
predict(model_mk,newdata=nd,interval="prediction")
confint(model_mk)
coeftest(model_mk)
nd <- data.frame(speed=10,speed2=100,speed3=1000)
predict(model_mk,newdata=nd,interval="prediction")
model <- lm(data=h, dist~speed)
coeftest(model)
predict(model,newdata=nd,interval="prediction")
predict(model_mk,newdata=nd,interval="prediction")
confint(model)
confint(model_mk)
?glmnet
confint(model)
confint(model_mk)
y <- h$dist
y <- h$dist
X0 <- model.matrix(data=h, dist~0+speed+speed2+speed3)
lambdas <- seq(50,0.1,length=30)
m_lasso <- glmnet(X0,y,alpha=1, lambda=lambdas)
plot(m_lasso,xvar="lambda",label=TRUE)
plot(m_lasso,xvar="dev",label=TRUE)
plot(m_lasso,xvar="norm",label=TRUE)
coef(m_lasso,s=c(0.1,1))
predict(m_lasso,newdata=nd,s=1)
nd
predict(m_lasso,newx=nd,s=1)
?predict
coef(m_lasso,s=c(0.1,1))
lambdas <- seq(50,0.1,length=30)
m_lasso <- glmnet(X0,y,alpha=1, lambda=lambdas)
X0 <- model.matrix(data=h, dist~0+speed+speed2+speed3)
lambdas <- seq(50,0.1,length=30)
m_lasso <- glmnet(X0,y,alpha=1, lambda=lambdas)
coef(m_lasso,s=c(0.1,1))
m_rr <- glmnet(X0,y,alpha=0, lambda=lambdas)
cv <- cv.glmnet(X0,y,alpha=1)
plot(cv)
cv$lambda.min
cv$lambda.1se
coef(cv,s="lambda.1se")
h <- heptathlon
glimpse(h)
help(heptathlon)
h <- select(h,-score)
cor(h)
describe(h)
h.pca <- prcomp(h,scale=TRUE)
pc1 <- h.pca$x[,1]
v1 <- h.pca$rotation[,1]
head(pc1)
head(v1)
v1
summary(h.pca)
cor(heptathlon$score,pc1)
plot(h.pca)
plot(h.pca,xlim=c(-1,1))
biplot(h.pca,xlim=c(-1,1))
cv <- cv.glmnet(X0,y,alpha=1)
plot(cv)
cv$lambda.min
cv$lambda.1se
coef(cv,s="lambda.1se")
h <- heptathlon
glimpse(h)
help(heptathlon)
describe(h)
h <- select(h,-score)
cor(h)
h.pca <- prcomp(h, scale=TRUE)
pca1 <- h.pca$x[,1]
v1 <- h.pca$rotation[,1]
v1
coef(m_lasso,s=c(0.1,1))
m_rr <- glmnet(X0,y,alpha=0, lambda=lambdas)
# cross validation
cv <- cv.glmnet(X0,y,alpha=1)
plot(cv)
cv$lambda.min
cv$lambda.1se
coef(cv,s="lambda.1se")
h <- heptathlon
help(heptathlon)
glimpse(h)
h <- select(h,-score)
describe(h)
cor(h)
h.pca <- prcomp(h,scale=TRUE)
pca1 <- h.pca$x[,1]
v1 <- h.pca$rotation[,1]
v1
head(pca1)
summary(h.pca)
cor(heptathlon$score,pca1)
plot(h.pca)
biplot(h.pca,xlim=c(-1,1))
install.packages(c("memisc", "dplyr", "psych", "lmtest", "sjPlot", "sgof", "ggplot2", "car", "hexbin"))
library("lubridate") # работа с датами
library("zoo") # временные ряды
library("xts") # еще ряды
library("dplyr") # манипуляции с данными
library("ggplot2") # графики
library("forecast")
library("quantmod") # загрузка с finance.google.com
install.packages("forecast")
install.packages("forecast")
setwd("C:/Users/somov_000/Desktop/lab_08")
library("quantmod")
getSymbols("GOOG")
getSymbols(Symbols = "GOOG")
getSymbols(Symbols = "GOOG")
Sys.setlocale("LC_TIME","C")
getSymbols(Symbols = "GOOG")
GOOG
setwd("~/Документи/Education/HSE/lab_08")
library("lubridate") # работа с датами
install.packages("lubridate")
library("lubridate") # работа с датами
install.packages("zoo")
install.packages("xts")
library("zoo") # временные ряды
library("xts") # еще ряды
library("dplyr") # манипуляции с данными
install.packages("dplyr")
library("dplyr") # манипуляции с данными
library("ggplot2") # графики
library("forecast")
install.packages("forecast")
library("forecast")
library("quantmod") # загрузка с finance.google.com
library("sophisthse") # загрузка с sophist.hse.ru
install.packages("quantmod")
library("quantmod") # загрузка с finance.google.com
install.packages("sophisthse")
library("sophisthse") # загрузка с sophist.hse.ru
y <- arima.sim(n=100, list(ar=0.7))
plot(y)
Acf(y)
Pacf(y)
tsdisplay(y)
y <- arima.sim(n=100, list(ma=-0.8))
tdisplay(y)
tsdisplay(y)
y <- arima.sim(n=100, list(ma=-0.8, ar=0.5))
tsdisplay(y)
tsdisplay(y)
y <- arima.sim(n=100, list(ma=-0.8, ar=0.5))
tsdisplay(y)
y <- arima.sim(n=100, list(ma=-0.8, ar=-0.5))
tsdisplay(y)
y <- arima.sim(n=100, list(order=c(0,1,0)))
tsdisplay(y)
y <- seq(0, 10, length=100) + arima.sim(n=100, list(ar=0.7))
tsdisplay(y)
y <- LakeHuron
tsdisplay(y)
mod_1 <- Arima(y, order=c(2,0,0))
mod_1 <- Arima(y, order=c(2,0,0))
mod_2 <- Arima(y, order=c(1,0,1)) # классическая ARMA модель
summary(mod_1)
summary(mod_2)
AIC(mod_1)
AIC(mod_2)
install.packages("sophisthse")
install.packages("RCurl")
AIC(mod_1)
AIC(mod_2)
mod_3 <- Arima(y, order=c(2,0,1))
AIC(mod_3)
prognoz <- forecast(mod_2, h=5) # h=5 - 5 years
prognoz
plot(prognoz)
mod_4 <- Arima(y, order=c(1,1,0))
AIC(mod_4)
prognoz <- forecast(mod_4, h=5)
plot(prognoz)
mod_a <- auto.arima(y)
summary(mod_a)
prognoz_a <- forecast(mod_a, h=5)
plot(prognoz_a)
mod_a <- auto.arima(y)
summary(mod_a)
prognoz_a <- forecast(mod_a, h=5)
plot(prognoz_a)
y <- LakeHuron
mod_a <- auto.arima(y)
summary(mod_a)
prognoz_a <- forecast(mod_a, h=5)
plot(prognoz_a)
